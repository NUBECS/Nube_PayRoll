//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace NUBE.PAYROLL.PL {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RipuTestDataSet2")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RipuTestDataSet2 : global::System.Data.DataSet {
        
        private MonthlySalaryDataTable tableMonthlySalary;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public RipuTestDataSet2() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected RipuTestDataSet2(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MonthlySalary"] != null)) {
                    base.Tables.Add(new MonthlySalaryDataTable(ds.Tables["MonthlySalary"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MonthlySalaryDataTable MonthlySalary {
            get {
                return this.tableMonthlySalary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            RipuTestDataSet2 cln = ((RipuTestDataSet2)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MonthlySalary"] != null)) {
                    base.Tables.Add(new MonthlySalaryDataTable(ds.Tables["MonthlySalary"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableMonthlySalary = ((MonthlySalaryDataTable)(base.Tables["MonthlySalary"]));
            if ((initTable == true)) {
                if ((this.tableMonthlySalary != null)) {
                    this.tableMonthlySalary.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "RipuTestDataSet2";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RipuTestDataSet2.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMonthlySalary = new MonthlySalaryDataTable();
            base.Tables.Add(this.tableMonthlySalary);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeMonthlySalary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RipuTestDataSet2 ds = new RipuTestDataSet2();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void MonthlySalaryRowChangeEventHandler(object sender, MonthlySalaryRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MonthlySalaryDataTable : global::System.Data.TypedTableBase<MonthlySalaryRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnEmployeeId;
            
            private global::System.Data.DataColumn columnEmployeeNo;
            
            private global::System.Data.DataColumn columnSalaryMonth;
            
            private global::System.Data.DataColumn columnEmployeeName;
            
            private global::System.Data.DataColumn columnDateOfJoining;
            
            private global::System.Data.DataColumn columnEPFNumber;
            
            private global::System.Data.DataColumn columnSOCSONumber;
            
            private global::System.Data.DataColumn columnSIPNumber;
            
            private global::System.Data.DataColumn columnNRIC;
            
            private global::System.Data.DataColumn columnBankAccountNo;
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnBasicSalary;
            
            private global::System.Data.DataColumn columnTotalWorkingDays;
            
            private global::System.Data.DataColumn columnDaysAbsent;
            
            private global::System.Data.DataColumn columnOTHours;
            
            private global::System.Data.DataColumn columnOT_Amount;
            
            private global::System.Data.DataColumn columnLOP;
            
            private global::System.Data.DataColumn columnPOB;
            
            private global::System.Data.DataColumn columnNEC;
            
            private global::System.Data.DataColumn columnSECONDMENT;
            
            private global::System.Data.DataColumn columnSPECIAL;
            
            private global::System.Data.DataColumn columnCOLA;
            
            private global::System.Data.DataColumn columnMOBILEALLOWANCE;
            
            private global::System.Data.DataColumn columnALLOWANCE;
            
            private global::System.Data.DataColumn columnBONUS;
            
            private global::System.Data.DataColumn columnEXGRATIA;
            
            private global::System.Data.DataColumn columnEPF;
            
            private global::System.Data.DataColumn columnEPFUNION;
            
            private global::System.Data.DataColumn columnSOCSO;
            
            private global::System.Data.DataColumn columnSOCSOUNION;
            
            private global::System.Data.DataColumn columnSIP;
            
            private global::System.Data.DataColumn columnSIPUNION;
            
            private global::System.Data.DataColumn columnINCOMETAX;
            
            private global::System.Data.DataColumn columnGMIS;
            
            private global::System.Data.DataColumn columnGELA;
            
            private global::System.Data.DataColumn columnBIMBLOAN;
            
            private global::System.Data.DataColumn columnHOMECARLOANS;
            
            private global::System.Data.DataColumn columnOTHERLOAN;
            
            private global::System.Data.DataColumn columnTOTALLOAN;
            
            private global::System.Data.DataColumn columnOTHERS;
            
            private global::System.Data.DataColumn columnKOPERASI;
            
            private global::System.Data.DataColumn columnNUBESUBSCRIPTION;
            
            private global::System.Data.DataColumn columnPCB;
            
            private global::System.Data.DataColumn columnAllowanceInAdvanced;
            
            private global::System.Data.DataColumn columnOtherDeductions;
            
            private global::System.Data.DataColumn columnTOTALEARNING;
            
            private global::System.Data.DataColumn columnTOTALDEDUCTION;
            
            private global::System.Data.DataColumn columnNETSALARY;
            
            private global::System.Data.DataColumn columnPositionName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MonthlySalaryDataTable() {
                this.TableName = "MonthlySalary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal MonthlySalaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected MonthlySalaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EmployeeIdColumn {
                get {
                    return this.columnEmployeeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EmployeeNoColumn {
                get {
                    return this.columnEmployeeNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SalaryMonthColumn {
                get {
                    return this.columnSalaryMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EmployeeNameColumn {
                get {
                    return this.columnEmployeeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DateOfJoiningColumn {
                get {
                    return this.columnDateOfJoining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EPFNumberColumn {
                get {
                    return this.columnEPFNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SOCSONumberColumn {
                get {
                    return this.columnSOCSONumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SIPNumberColumn {
                get {
                    return this.columnSIPNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NRICColumn {
                get {
                    return this.columnNRIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BankAccountNoColumn {
                get {
                    return this.columnBankAccountNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BasicSalaryColumn {
                get {
                    return this.columnBasicSalary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TotalWorkingDaysColumn {
                get {
                    return this.columnTotalWorkingDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DaysAbsentColumn {
                get {
                    return this.columnDaysAbsent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OTHoursColumn {
                get {
                    return this.columnOTHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OT_AmountColumn {
                get {
                    return this.columnOT_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOPColumn {
                get {
                    return this.columnLOP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn POBColumn {
                get {
                    return this.columnPOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NECColumn {
                get {
                    return this.columnNEC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SECONDMENTColumn {
                get {
                    return this.columnSECONDMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SPECIALColumn {
                get {
                    return this.columnSPECIAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn COLAColumn {
                get {
                    return this.columnCOLA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MOBILEALLOWANCEColumn {
                get {
                    return this.columnMOBILEALLOWANCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ALLOWANCEColumn {
                get {
                    return this.columnALLOWANCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BONUSColumn {
                get {
                    return this.columnBONUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EXGRATIAColumn {
                get {
                    return this.columnEXGRATIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EPFColumn {
                get {
                    return this.columnEPF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EPFUNIONColumn {
                get {
                    return this.columnEPFUNION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SOCSOColumn {
                get {
                    return this.columnSOCSO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SOCSOUNIONColumn {
                get {
                    return this.columnSOCSOUNION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SIPColumn {
                get {
                    return this.columnSIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SIPUNIONColumn {
                get {
                    return this.columnSIPUNION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn INCOMETAXColumn {
                get {
                    return this.columnINCOMETAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GMISColumn {
                get {
                    return this.columnGMIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GELAColumn {
                get {
                    return this.columnGELA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BIMBLOANColumn {
                get {
                    return this.columnBIMBLOAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HOMECARLOANSColumn {
                get {
                    return this.columnHOMECARLOANS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OTHERLOANColumn {
                get {
                    return this.columnOTHERLOAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TOTALLOANColumn {
                get {
                    return this.columnTOTALLOAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OTHERSColumn {
                get {
                    return this.columnOTHERS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KOPERASIColumn {
                get {
                    return this.columnKOPERASI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NUBESUBSCRIPTIONColumn {
                get {
                    return this.columnNUBESUBSCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PCBColumn {
                get {
                    return this.columnPCB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AllowanceInAdvancedColumn {
                get {
                    return this.columnAllowanceInAdvanced;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OtherDeductionsColumn {
                get {
                    return this.columnOtherDeductions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TOTALEARNINGColumn {
                get {
                    return this.columnTOTALEARNING;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TOTALDEDUCTIONColumn {
                get {
                    return this.columnTOTALDEDUCTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NETSALARYColumn {
                get {
                    return this.columnNETSALARY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PositionNameColumn {
                get {
                    return this.columnPositionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MonthlySalaryRow this[int index] {
                get {
                    return ((MonthlySalaryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event MonthlySalaryRowChangeEventHandler MonthlySalaryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event MonthlySalaryRowChangeEventHandler MonthlySalaryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event MonthlySalaryRowChangeEventHandler MonthlySalaryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event MonthlySalaryRowChangeEventHandler MonthlySalaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddMonthlySalaryRow(MonthlySalaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MonthlySalaryRow AddMonthlySalaryRow(
                        int EmployeeId, 
                        int EmployeeNo, 
                        System.DateTime SalaryMonth, 
                        string EmployeeName, 
                        System.DateTime DateOfJoining, 
                        string EPFNumber, 
                        string SOCSONumber, 
                        string SIPNumber, 
                        string NRIC, 
                        string BankAccountNo, 
                        string BankName, 
                        decimal BasicSalary, 
                        decimal TotalWorkingDays, 
                        decimal DaysAbsent, 
                        decimal OTHours, 
                        decimal OT_Amount, 
                        decimal LOP, 
                        decimal POB, 
                        decimal NEC, 
                        decimal SECONDMENT, 
                        decimal SPECIAL, 
                        decimal COLA, 
                        decimal MOBILEALLOWANCE, 
                        decimal ALLOWANCE, 
                        decimal BONUS, 
                        decimal EXGRATIA, 
                        decimal EPF, 
                        decimal EPFUNION, 
                        decimal SOCSO, 
                        decimal SOCSOUNION, 
                        decimal SIP, 
                        decimal SIPUNION, 
                        decimal INCOMETAX, 
                        decimal GMIS, 
                        decimal GELA, 
                        decimal BIMBLOAN, 
                        decimal HOMECARLOANS, 
                        decimal OTHERLOAN, 
                        decimal TOTALLOAN, 
                        decimal OTHERS, 
                        decimal KOPERASI, 
                        decimal NUBESUBSCRIPTION, 
                        decimal PCB, 
                        decimal AllowanceInAdvanced, 
                        decimal OtherDeductions, 
                        decimal TOTALEARNING, 
                        decimal TOTALDEDUCTION, 
                        decimal NETSALARY, 
                        string PositionName) {
                MonthlySalaryRow rowMonthlySalaryRow = ((MonthlySalaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        EmployeeId,
                        EmployeeNo,
                        SalaryMonth,
                        EmployeeName,
                        DateOfJoining,
                        EPFNumber,
                        SOCSONumber,
                        SIPNumber,
                        NRIC,
                        BankAccountNo,
                        BankName,
                        BasicSalary,
                        TotalWorkingDays,
                        DaysAbsent,
                        OTHours,
                        OT_Amount,
                        LOP,
                        POB,
                        NEC,
                        SECONDMENT,
                        SPECIAL,
                        COLA,
                        MOBILEALLOWANCE,
                        ALLOWANCE,
                        BONUS,
                        EXGRATIA,
                        EPF,
                        EPFUNION,
                        SOCSO,
                        SOCSOUNION,
                        SIP,
                        SIPUNION,
                        INCOMETAX,
                        GMIS,
                        GELA,
                        BIMBLOAN,
                        HOMECARLOANS,
                        OTHERLOAN,
                        TOTALLOAN,
                        OTHERS,
                        KOPERASI,
                        NUBESUBSCRIPTION,
                        PCB,
                        AllowanceInAdvanced,
                        OtherDeductions,
                        TOTALEARNING,
                        TOTALDEDUCTION,
                        NETSALARY,
                        PositionName};
                rowMonthlySalaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMonthlySalaryRow);
                return rowMonthlySalaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MonthlySalaryRow FindById(int Id) {
                return ((MonthlySalaryRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MonthlySalaryDataTable cln = ((MonthlySalaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MonthlySalaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnEmployeeId = base.Columns["EmployeeId"];
                this.columnEmployeeNo = base.Columns["EmployeeNo"];
                this.columnSalaryMonth = base.Columns["SalaryMonth"];
                this.columnEmployeeName = base.Columns["EmployeeName"];
                this.columnDateOfJoining = base.Columns["DateOfJoining"];
                this.columnEPFNumber = base.Columns["EPFNumber"];
                this.columnSOCSONumber = base.Columns["SOCSONumber"];
                this.columnSIPNumber = base.Columns["SIPNumber"];
                this.columnNRIC = base.Columns["NRIC"];
                this.columnBankAccountNo = base.Columns["BankAccountNo"];
                this.columnBankName = base.Columns["BankName"];
                this.columnBasicSalary = base.Columns["BasicSalary"];
                this.columnTotalWorkingDays = base.Columns["TotalWorkingDays"];
                this.columnDaysAbsent = base.Columns["DaysAbsent"];
                this.columnOTHours = base.Columns["OTHours"];
                this.columnOT_Amount = base.Columns["OT_Amount"];
                this.columnLOP = base.Columns["LOP"];
                this.columnPOB = base.Columns["POB"];
                this.columnNEC = base.Columns["NEC"];
                this.columnSECONDMENT = base.Columns["SECONDMENT"];
                this.columnSPECIAL = base.Columns["SPECIAL"];
                this.columnCOLA = base.Columns["COLA"];
                this.columnMOBILEALLOWANCE = base.Columns["MOBILEALLOWANCE"];
                this.columnALLOWANCE = base.Columns["ALLOWANCE"];
                this.columnBONUS = base.Columns["BONUS"];
                this.columnEXGRATIA = base.Columns["EXGRATIA"];
                this.columnEPF = base.Columns["EPF"];
                this.columnEPFUNION = base.Columns["EPFUNION"];
                this.columnSOCSO = base.Columns["SOCSO"];
                this.columnSOCSOUNION = base.Columns["SOCSOUNION"];
                this.columnSIP = base.Columns["SIP"];
                this.columnSIPUNION = base.Columns["SIPUNION"];
                this.columnINCOMETAX = base.Columns["INCOMETAX"];
                this.columnGMIS = base.Columns["GMIS"];
                this.columnGELA = base.Columns["GELA"];
                this.columnBIMBLOAN = base.Columns["BIMBLOAN"];
                this.columnHOMECARLOANS = base.Columns["HOMECARLOANS"];
                this.columnOTHERLOAN = base.Columns["OTHERLOAN"];
                this.columnTOTALLOAN = base.Columns["TOTALLOAN"];
                this.columnOTHERS = base.Columns["OTHERS"];
                this.columnKOPERASI = base.Columns["KOPERASI"];
                this.columnNUBESUBSCRIPTION = base.Columns["NUBESUBSCRIPTION"];
                this.columnPCB = base.Columns["PCB"];
                this.columnAllowanceInAdvanced = base.Columns["AllowanceInAdvanced"];
                this.columnOtherDeductions = base.Columns["OtherDeductions"];
                this.columnTOTALEARNING = base.Columns["TOTALEARNING"];
                this.columnTOTALDEDUCTION = base.Columns["TOTALDEDUCTION"];
                this.columnNETSALARY = base.Columns["NETSALARY"];
                this.columnPositionName = base.Columns["PositionName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnEmployeeId = new global::System.Data.DataColumn("EmployeeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeId);
                this.columnEmployeeNo = new global::System.Data.DataColumn("EmployeeNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeNo);
                this.columnSalaryMonth = new global::System.Data.DataColumn("SalaryMonth", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryMonth);
                this.columnEmployeeName = new global::System.Data.DataColumn("EmployeeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeName);
                this.columnDateOfJoining = new global::System.Data.DataColumn("DateOfJoining", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfJoining);
                this.columnEPFNumber = new global::System.Data.DataColumn("EPFNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPFNumber);
                this.columnSOCSONumber = new global::System.Data.DataColumn("SOCSONumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOCSONumber);
                this.columnSIPNumber = new global::System.Data.DataColumn("SIPNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIPNumber);
                this.columnNRIC = new global::System.Data.DataColumn("NRIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNRIC);
                this.columnBankAccountNo = new global::System.Data.DataColumn("BankAccountNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAccountNo);
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnBasicSalary = new global::System.Data.DataColumn("BasicSalary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasicSalary);
                this.columnTotalWorkingDays = new global::System.Data.DataColumn("TotalWorkingDays", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalWorkingDays);
                this.columnDaysAbsent = new global::System.Data.DataColumn("DaysAbsent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaysAbsent);
                this.columnOTHours = new global::System.Data.DataColumn("OTHours", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHours);
                this.columnOT_Amount = new global::System.Data.DataColumn("OT_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_Amount);
                this.columnLOP = new global::System.Data.DataColumn("LOP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOP);
                this.columnPOB = new global::System.Data.DataColumn("POB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOB);
                this.columnNEC = new global::System.Data.DataColumn("NEC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNEC);
                this.columnSECONDMENT = new global::System.Data.DataColumn("SECONDMENT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSECONDMENT);
                this.columnSPECIAL = new global::System.Data.DataColumn("SPECIAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECIAL);
                this.columnCOLA = new global::System.Data.DataColumn("COLA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLA);
                this.columnMOBILEALLOWANCE = new global::System.Data.DataColumn("MOBILEALLOWANCE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOBILEALLOWANCE);
                this.columnALLOWANCE = new global::System.Data.DataColumn("ALLOWANCE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALLOWANCE);
                this.columnBONUS = new global::System.Data.DataColumn("BONUS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBONUS);
                this.columnEXGRATIA = new global::System.Data.DataColumn("EXGRATIA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXGRATIA);
                this.columnEPF = new global::System.Data.DataColumn("EPF", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPF);
                this.columnEPFUNION = new global::System.Data.DataColumn("EPFUNION", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPFUNION);
                this.columnSOCSO = new global::System.Data.DataColumn("SOCSO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOCSO);
                this.columnSOCSOUNION = new global::System.Data.DataColumn("SOCSOUNION", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOCSOUNION);
                this.columnSIP = new global::System.Data.DataColumn("SIP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIP);
                this.columnSIPUNION = new global::System.Data.DataColumn("SIPUNION", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIPUNION);
                this.columnINCOMETAX = new global::System.Data.DataColumn("INCOMETAX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCOMETAX);
                this.columnGMIS = new global::System.Data.DataColumn("GMIS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGMIS);
                this.columnGELA = new global::System.Data.DataColumn("GELA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGELA);
                this.columnBIMBLOAN = new global::System.Data.DataColumn("BIMBLOAN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIMBLOAN);
                this.columnHOMECARLOANS = new global::System.Data.DataColumn("HOMECARLOANS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOMECARLOANS);
                this.columnOTHERLOAN = new global::System.Data.DataColumn("OTHERLOAN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHERLOAN);
                this.columnTOTALLOAN = new global::System.Data.DataColumn("TOTALLOAN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTALLOAN);
                this.columnOTHERS = new global::System.Data.DataColumn("OTHERS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHERS);
                this.columnKOPERASI = new global::System.Data.DataColumn("KOPERASI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOPERASI);
                this.columnNUBESUBSCRIPTION = new global::System.Data.DataColumn("NUBESUBSCRIPTION", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUBESUBSCRIPTION);
                this.columnPCB = new global::System.Data.DataColumn("PCB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCB);
                this.columnAllowanceInAdvanced = new global::System.Data.DataColumn("AllowanceInAdvanced", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowanceInAdvanced);
                this.columnOtherDeductions = new global::System.Data.DataColumn("OtherDeductions", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherDeductions);
                this.columnTOTALEARNING = new global::System.Data.DataColumn("TOTALEARNING", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTALEARNING);
                this.columnTOTALDEDUCTION = new global::System.Data.DataColumn("TOTALDEDUCTION", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTALDEDUCTION);
                this.columnNETSALARY = new global::System.Data.DataColumn("NETSALARY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNETSALARY);
                this.columnPositionName = new global::System.Data.DataColumn("PositionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPositionName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnEmployeeId.AllowDBNull = false;
                this.columnEmployeeNo.AllowDBNull = false;
                this.columnEmployeeName.MaxLength = 50;
                this.columnEPFNumber.MaxLength = 50;
                this.columnSOCSONumber.MaxLength = 50;
                this.columnSIPNumber.MaxLength = 50;
                this.columnNRIC.MaxLength = 50;
                this.columnBankAccountNo.MaxLength = 50;
                this.columnBankName.MaxLength = 50;
                this.columnBasicSalary.AllowDBNull = false;
                this.columnTotalWorkingDays.AllowDBNull = false;
                this.columnDaysAbsent.AllowDBNull = false;
                this.columnOTHours.AllowDBNull = false;
                this.columnOT_Amount.AllowDBNull = false;
                this.columnLOP.AllowDBNull = false;
                this.columnPOB.AllowDBNull = false;
                this.columnNEC.AllowDBNull = false;
                this.columnSECONDMENT.AllowDBNull = false;
                this.columnSPECIAL.AllowDBNull = false;
                this.columnCOLA.AllowDBNull = false;
                this.columnMOBILEALLOWANCE.AllowDBNull = false;
                this.columnALLOWANCE.AllowDBNull = false;
                this.columnBONUS.AllowDBNull = false;
                this.columnEXGRATIA.AllowDBNull = false;
                this.columnEPF.AllowDBNull = false;
                this.columnEPFUNION.AllowDBNull = false;
                this.columnSOCSO.AllowDBNull = false;
                this.columnSOCSOUNION.AllowDBNull = false;
                this.columnSIP.AllowDBNull = false;
                this.columnSIPUNION.AllowDBNull = false;
                this.columnINCOMETAX.AllowDBNull = false;
                this.columnGMIS.AllowDBNull = false;
                this.columnGELA.AllowDBNull = false;
                this.columnBIMBLOAN.AllowDBNull = false;
                this.columnHOMECARLOANS.AllowDBNull = false;
                this.columnOTHERLOAN.AllowDBNull = false;
                this.columnTOTALLOAN.AllowDBNull = false;
                this.columnOTHERS.AllowDBNull = false;
                this.columnKOPERASI.AllowDBNull = false;
                this.columnNUBESUBSCRIPTION.AllowDBNull = false;
                this.columnPCB.AllowDBNull = false;
                this.columnAllowanceInAdvanced.AllowDBNull = false;
                this.columnOtherDeductions.AllowDBNull = false;
                this.columnTOTALEARNING.AllowDBNull = false;
                this.columnTOTALDEDUCTION.AllowDBNull = false;
                this.columnNETSALARY.AllowDBNull = false;
                this.columnPositionName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MonthlySalaryRow NewMonthlySalaryRow() {
                return ((MonthlySalaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MonthlySalaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MonthlySalaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MonthlySalaryRowChanged != null)) {
                    this.MonthlySalaryRowChanged(this, new MonthlySalaryRowChangeEvent(((MonthlySalaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MonthlySalaryRowChanging != null)) {
                    this.MonthlySalaryRowChanging(this, new MonthlySalaryRowChangeEvent(((MonthlySalaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MonthlySalaryRowDeleted != null)) {
                    this.MonthlySalaryRowDeleted(this, new MonthlySalaryRowChangeEvent(((MonthlySalaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MonthlySalaryRowDeleting != null)) {
                    this.MonthlySalaryRowDeleting(this, new MonthlySalaryRowChangeEvent(((MonthlySalaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveMonthlySalaryRow(MonthlySalaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RipuTestDataSet2 ds = new RipuTestDataSet2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MonthlySalaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MonthlySalaryRow : global::System.Data.DataRow {
            
            private MonthlySalaryDataTable tableMonthlySalary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal MonthlySalaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMonthlySalary = ((MonthlySalaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableMonthlySalary.IdColumn]));
                }
                set {
                    this[this.tableMonthlySalary.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int EmployeeId {
                get {
                    return ((int)(this[this.tableMonthlySalary.EmployeeIdColumn]));
                }
                set {
                    this[this.tableMonthlySalary.EmployeeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int EmployeeNo {
                get {
                    return ((int)(this[this.tableMonthlySalary.EmployeeNoColumn]));
                }
                set {
                    this[this.tableMonthlySalary.EmployeeNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime SalaryMonth {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMonthlySalary.SalaryMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalaryMonth\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.SalaryMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string EmployeeName {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalary.EmployeeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeName\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.EmployeeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DateOfJoining {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMonthlySalary.DateOfJoiningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOfJoining\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.DateOfJoiningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string EPFNumber {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalary.EPFNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EPFNumber\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.EPFNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SOCSONumber {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalary.SOCSONumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOCSONumber\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.SOCSONumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SIPNumber {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalary.SIPNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIPNumber\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.SIPNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NRIC {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalary.NRICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NRIC\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.NRICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BankAccountNo {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalary.BankAccountNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankAccountNo\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.BankAccountNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BankName {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalary.BankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankName\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal BasicSalary {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.BasicSalaryColumn]));
                }
                set {
                    this[this.tableMonthlySalary.BasicSalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal TotalWorkingDays {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.TotalWorkingDaysColumn]));
                }
                set {
                    this[this.tableMonthlySalary.TotalWorkingDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DaysAbsent {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.DaysAbsentColumn]));
                }
                set {
                    this[this.tableMonthlySalary.DaysAbsentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal OTHours {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.OTHoursColumn]));
                }
                set {
                    this[this.tableMonthlySalary.OTHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal OT_Amount {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.OT_AmountColumn]));
                }
                set {
                    this[this.tableMonthlySalary.OT_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal LOP {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.LOPColumn]));
                }
                set {
                    this[this.tableMonthlySalary.LOPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal POB {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.POBColumn]));
                }
                set {
                    this[this.tableMonthlySalary.POBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal NEC {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.NECColumn]));
                }
                set {
                    this[this.tableMonthlySalary.NECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal SECONDMENT {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.SECONDMENTColumn]));
                }
                set {
                    this[this.tableMonthlySalary.SECONDMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal SPECIAL {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.SPECIALColumn]));
                }
                set {
                    this[this.tableMonthlySalary.SPECIALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal COLA {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.COLAColumn]));
                }
                set {
                    this[this.tableMonthlySalary.COLAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal MOBILEALLOWANCE {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.MOBILEALLOWANCEColumn]));
                }
                set {
                    this[this.tableMonthlySalary.MOBILEALLOWANCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal ALLOWANCE {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.ALLOWANCEColumn]));
                }
                set {
                    this[this.tableMonthlySalary.ALLOWANCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal BONUS {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.BONUSColumn]));
                }
                set {
                    this[this.tableMonthlySalary.BONUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal EXGRATIA {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.EXGRATIAColumn]));
                }
                set {
                    this[this.tableMonthlySalary.EXGRATIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal EPF {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.EPFColumn]));
                }
                set {
                    this[this.tableMonthlySalary.EPFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal EPFUNION {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.EPFUNIONColumn]));
                }
                set {
                    this[this.tableMonthlySalary.EPFUNIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal SOCSO {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.SOCSOColumn]));
                }
                set {
                    this[this.tableMonthlySalary.SOCSOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal SOCSOUNION {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.SOCSOUNIONColumn]));
                }
                set {
                    this[this.tableMonthlySalary.SOCSOUNIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal SIP {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.SIPColumn]));
                }
                set {
                    this[this.tableMonthlySalary.SIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal SIPUNION {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.SIPUNIONColumn]));
                }
                set {
                    this[this.tableMonthlySalary.SIPUNIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal INCOMETAX {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.INCOMETAXColumn]));
                }
                set {
                    this[this.tableMonthlySalary.INCOMETAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal GMIS {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.GMISColumn]));
                }
                set {
                    this[this.tableMonthlySalary.GMISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal GELA {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.GELAColumn]));
                }
                set {
                    this[this.tableMonthlySalary.GELAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal BIMBLOAN {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.BIMBLOANColumn]));
                }
                set {
                    this[this.tableMonthlySalary.BIMBLOANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal HOMECARLOANS {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.HOMECARLOANSColumn]));
                }
                set {
                    this[this.tableMonthlySalary.HOMECARLOANSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal OTHERLOAN {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.OTHERLOANColumn]));
                }
                set {
                    this[this.tableMonthlySalary.OTHERLOANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal TOTALLOAN {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.TOTALLOANColumn]));
                }
                set {
                    this[this.tableMonthlySalary.TOTALLOANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal OTHERS {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.OTHERSColumn]));
                }
                set {
                    this[this.tableMonthlySalary.OTHERSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal KOPERASI {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.KOPERASIColumn]));
                }
                set {
                    this[this.tableMonthlySalary.KOPERASIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal NUBESUBSCRIPTION {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.NUBESUBSCRIPTIONColumn]));
                }
                set {
                    this[this.tableMonthlySalary.NUBESUBSCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal PCB {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.PCBColumn]));
                }
                set {
                    this[this.tableMonthlySalary.PCBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal AllowanceInAdvanced {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.AllowanceInAdvancedColumn]));
                }
                set {
                    this[this.tableMonthlySalary.AllowanceInAdvancedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal OtherDeductions {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.OtherDeductionsColumn]));
                }
                set {
                    this[this.tableMonthlySalary.OtherDeductionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal TOTALEARNING {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.TOTALEARNINGColumn]));
                }
                set {
                    this[this.tableMonthlySalary.TOTALEARNINGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal TOTALDEDUCTION {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.TOTALDEDUCTIONColumn]));
                }
                set {
                    this[this.tableMonthlySalary.TOTALDEDUCTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal NETSALARY {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.NETSALARYColumn]));
                }
                set {
                    this[this.tableMonthlySalary.NETSALARYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PositionName {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalary.PositionNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PositionName\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.PositionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSalaryMonthNull() {
                return this.IsNull(this.tableMonthlySalary.SalaryMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSalaryMonthNull() {
                this[this.tableMonthlySalary.SalaryMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEmployeeNameNull() {
                return this.IsNull(this.tableMonthlySalary.EmployeeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEmployeeNameNull() {
                this[this.tableMonthlySalary.EmployeeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDateOfJoiningNull() {
                return this.IsNull(this.tableMonthlySalary.DateOfJoiningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDateOfJoiningNull() {
                this[this.tableMonthlySalary.DateOfJoiningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEPFNumberNull() {
                return this.IsNull(this.tableMonthlySalary.EPFNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEPFNumberNull() {
                this[this.tableMonthlySalary.EPFNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSOCSONumberNull() {
                return this.IsNull(this.tableMonthlySalary.SOCSONumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSOCSONumberNull() {
                this[this.tableMonthlySalary.SOCSONumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSIPNumberNull() {
                return this.IsNull(this.tableMonthlySalary.SIPNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSIPNumberNull() {
                this[this.tableMonthlySalary.SIPNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNRICNull() {
                return this.IsNull(this.tableMonthlySalary.NRICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNRICNull() {
                this[this.tableMonthlySalary.NRICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBankAccountNoNull() {
                return this.IsNull(this.tableMonthlySalary.BankAccountNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBankAccountNoNull() {
                this[this.tableMonthlySalary.BankAccountNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBankNameNull() {
                return this.IsNull(this.tableMonthlySalary.BankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBankNameNull() {
                this[this.tableMonthlySalary.BankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPositionNameNull() {
                return this.IsNull(this.tableMonthlySalary.PositionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPositionNameNull() {
                this[this.tableMonthlySalary.PositionNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class MonthlySalaryRowChangeEvent : global::System.EventArgs {
            
            private MonthlySalaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MonthlySalaryRowChangeEvent(MonthlySalaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MonthlySalaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace NUBE.PAYROLL.PL.RipuTestDataSet2TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MonthlySalaryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public MonthlySalaryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MonthlySalary";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("EmployeeId", "EmployeeId");
            tableMapping.ColumnMappings.Add("EmployeeNo", "EmployeeNo");
            tableMapping.ColumnMappings.Add("SalaryMonth", "SalaryMonth");
            tableMapping.ColumnMappings.Add("EmployeeName", "EmployeeName");
            tableMapping.ColumnMappings.Add("DateOfJoining", "DateOfJoining");
            tableMapping.ColumnMappings.Add("EPFNumber", "EPFNumber");
            tableMapping.ColumnMappings.Add("SOCSONumber", "SOCSONumber");
            tableMapping.ColumnMappings.Add("SIPNumber", "SIPNumber");
            tableMapping.ColumnMappings.Add("NRIC", "NRIC");
            tableMapping.ColumnMappings.Add("BankAccountNo", "BankAccountNo");
            tableMapping.ColumnMappings.Add("BankName", "BankName");
            tableMapping.ColumnMappings.Add("BasicSalary", "BasicSalary");
            tableMapping.ColumnMappings.Add("TotalWorkingDays", "TotalWorkingDays");
            tableMapping.ColumnMappings.Add("DaysAbsent", "DaysAbsent");
            tableMapping.ColumnMappings.Add("OTHours", "OTHours");
            tableMapping.ColumnMappings.Add("OT_Amount", "OT_Amount");
            tableMapping.ColumnMappings.Add("LOP", "LOP");
            tableMapping.ColumnMappings.Add("POB", "POB");
            tableMapping.ColumnMappings.Add("NEC", "NEC");
            tableMapping.ColumnMappings.Add("SECONDMENT", "SECONDMENT");
            tableMapping.ColumnMappings.Add("SPECIAL", "SPECIAL");
            tableMapping.ColumnMappings.Add("COLA", "COLA");
            tableMapping.ColumnMappings.Add("MOBILEALLOWANCE", "MOBILEALLOWANCE");
            tableMapping.ColumnMappings.Add("ALLOWANCE", "ALLOWANCE");
            tableMapping.ColumnMappings.Add("BONUS", "BONUS");
            tableMapping.ColumnMappings.Add("EXGRATIA", "EXGRATIA");
            tableMapping.ColumnMappings.Add("EPF", "EPF");
            tableMapping.ColumnMappings.Add("EPFUNION", "EPFUNION");
            tableMapping.ColumnMappings.Add("SOCSO", "SOCSO");
            tableMapping.ColumnMappings.Add("SOCSOUNION", "SOCSOUNION");
            tableMapping.ColumnMappings.Add("SIP", "SIP");
            tableMapping.ColumnMappings.Add("SIPUNION", "SIPUNION");
            tableMapping.ColumnMappings.Add("INCOMETAX", "INCOMETAX");
            tableMapping.ColumnMappings.Add("GMIS", "GMIS");
            tableMapping.ColumnMappings.Add("GELA", "GELA");
            tableMapping.ColumnMappings.Add("BIMBLOAN", "BIMBLOAN");
            tableMapping.ColumnMappings.Add("HOMECARLOANS", "HOMECARLOANS");
            tableMapping.ColumnMappings.Add("OTHERLOAN", "OTHERLOAN");
            tableMapping.ColumnMappings.Add("TOTALLOAN", "TOTALLOAN");
            tableMapping.ColumnMappings.Add("OTHERS", "OTHERS");
            tableMapping.ColumnMappings.Add("KOPERASI", "KOPERASI");
            tableMapping.ColumnMappings.Add("NUBESUBSCRIPTION", "NUBESUBSCRIPTION");
            tableMapping.ColumnMappings.Add("PCB", "PCB");
            tableMapping.ColumnMappings.Add("AllowanceInAdvanced", "AllowanceInAdvanced");
            tableMapping.ColumnMappings.Add("OtherDeductions", "OtherDeductions");
            tableMapping.ColumnMappings.Add("TOTALEARNING", "TOTALEARNING");
            tableMapping.ColumnMappings.Add("TOTALDEDUCTION", "TOTALDEDUCTION");
            tableMapping.ColumnMappings.Add("NETSALARY", "NETSALARY");
            tableMapping.ColumnMappings.Add("PositionName", "PositionName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[MonthlySalary] WHERE (([Id] = @Original_Id) AND ([EmployeeId] " +
                "= @Original_EmployeeId) AND ([EmployeeNo] = @Original_EmployeeNo) AND ((@IsNull_" +
                "SalaryMonth = 1 AND [SalaryMonth] IS NULL) OR ([SalaryMonth] = @Original_SalaryM" +
                "onth)) AND ((@IsNull_EmployeeName = 1 AND [EmployeeName] IS NULL) OR ([EmployeeN" +
                "ame] = @Original_EmployeeName)) AND ((@IsNull_DateOfJoining = 1 AND [DateOfJoini" +
                "ng] IS NULL) OR ([DateOfJoining] = @Original_DateOfJoining)) AND ((@IsNull_EPFNu" +
                "mber = 1 AND [EPFNumber] IS NULL) OR ([EPFNumber] = @Original_EPFNumber)) AND ((" +
                "@IsNull_SOCSONumber = 1 AND [SOCSONumber] IS NULL) OR ([SOCSONumber] = @Original" +
                "_SOCSONumber)) AND ((@IsNull_SIPNumber = 1 AND [SIPNumber] IS NULL) OR ([SIPNumb" +
                "er] = @Original_SIPNumber)) AND ((@IsNull_NRIC = 1 AND [NRIC] IS NULL) OR ([NRIC" +
                "] = @Original_NRIC)) AND ((@IsNull_BankAccountNo = 1 AND [BankAccountNo] IS NULL" +
                ") OR ([BankAccountNo] = @Original_BankAccountNo)) AND ((@IsNull_BankName = 1 AND" +
                " [BankName] IS NULL) OR ([BankName] = @Original_BankName)) AND ([BasicSalary] = " +
                "@Original_BasicSalary) AND ([TotalWorkingDays] = @Original_TotalWorkingDays) AND" +
                " ([DaysAbsent] = @Original_DaysAbsent) AND ([OTHours] = @Original_OTHours) AND (" +
                "[OT_Amount] = @Original_OT_Amount) AND ([LOP] = @Original_LOP) AND ([POB] = @Ori" +
                "ginal_POB) AND ([NEC] = @Original_NEC) AND ([SECONDMENT] = @Original_SECONDMENT)" +
                " AND ([SPECIAL] = @Original_SPECIAL) AND ([COLA] = @Original_COLA) AND ([MOBILEA" +
                "LLOWANCE] = @Original_MOBILEALLOWANCE) AND ([ALLOWANCE] = @Original_ALLOWANCE) A" +
                "ND ([BONUS] = @Original_BONUS) AND ([EXGRATIA] = @Original_EXGRATIA) AND ([EPF] " +
                "= @Original_EPF) AND ([EPFUNION] = @Original_EPFUNION) AND ([SOCSO] = @Original_" +
                "SOCSO) AND ([SOCSOUNION] = @Original_SOCSOUNION) AND ([SIP] = @Original_SIP) AND" +
                " ([SIPUNION] = @Original_SIPUNION) AND ([INCOMETAX] = @Original_INCOMETAX) AND (" +
                "[GMIS] = @Original_GMIS) AND ([GELA] = @Original_GELA) AND ([BIMBLOAN] = @Origin" +
                "al_BIMBLOAN) AND ([HOMECARLOANS] = @Original_HOMECARLOANS) AND ([OTHERLOAN] = @O" +
                "riginal_OTHERLOAN) AND ([TOTALLOAN] = @Original_TOTALLOAN) AND ([OTHERS] = @Orig" +
                "inal_OTHERS) AND ([KOPERASI] = @Original_KOPERASI) AND ([NUBESUBSCRIPTION] = @Or" +
                "iginal_NUBESUBSCRIPTION) AND ([PCB] = @Original_PCB) AND ([AllowanceInAdvanced] " +
                "= @Original_AllowanceInAdvanced) AND ([OtherDeductions] = @Original_OtherDeducti" +
                "ons) AND ([TOTALEARNING] = @Original_TOTALEARNING) AND ([TOTALDEDUCTION] = @Orig" +
                "inal_TOTALDEDUCTION) AND ([NETSALARY] = @Original_NETSALARY) AND ((@IsNull_Posit" +
                "ionName = 1 AND [PositionName] IS NULL) OR ([PositionName] = @Original_PositionN" +
                "ame)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SalaryMonth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalaryMonth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalaryMonth", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalaryMonth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EmployeeName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateOfJoining", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfJoining", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateOfJoining", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfJoining", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPFNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPFNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPFNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPFNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SOCSONumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOCSONumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOCSONumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOCSONumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SIPNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIPNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SIPNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIPNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NRIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NRIC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BankAccountNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BankAccountNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BankName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BankName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BasicSalary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BasicSalary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalWorkingDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalWorkingDays", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DaysAbsent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DaysAbsent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTHours", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHours", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OT_Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OT_Amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LOP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "POB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NEC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NEC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SECONDMENT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SECONDMENT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SPECIAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SPECIAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COLA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "COLA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MOBILEALLOWANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "MOBILEALLOWANCE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ALLOWANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ALLOWANCE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BONUS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BONUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXGRATIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXGRATIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPF", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EPF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPFUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EPFUNION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOCSO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SOCSO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOCSOUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SOCSOUNION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SIP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SIP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SIPUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SIPUNION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INCOMETAX", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INCOMETAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GMIS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "GMIS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GELA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "GELA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BIMBLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BIMBLOAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOMECARLOANS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HOMECARLOANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTHERLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHERLOAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTALLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALLOAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTHERS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHERS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOPERASI", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOPERASI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NUBESUBSCRIPTION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NUBESUBSCRIPTION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PCB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PCB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowanceInAdvanced", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "AllowanceInAdvanced", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherDeductions", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OtherDeductions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTALEARNING", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALEARNING", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTALDEDUCTION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALDEDUCTION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NETSALARY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NETSALARY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PositionName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PositionName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PositionName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PositionName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[MonthlySalary] ([EmployeeId], [EmployeeNo], [SalaryMonth], [Em" +
                "ployeeName], [DateOfJoining], [EPFNumber], [SOCSONumber], [SIPNumber], [NRIC], [" +
                "BankAccountNo], [BankName], [BasicSalary], [TotalWorkingDays], [DaysAbsent], [OT" +
                "Hours], [OT_Amount], [LOP], [POB], [NEC], [SECONDMENT], [SPECIAL], [COLA], [MOBI" +
                "LEALLOWANCE], [ALLOWANCE], [BONUS], [EXGRATIA], [EPF], [EPFUNION], [SOCSO], [SOC" +
                "SOUNION], [SIP], [SIPUNION], [INCOMETAX], [GMIS], [GELA], [BIMBLOAN], [HOMECARLO" +
                "ANS], [OTHERLOAN], [TOTALLOAN], [OTHERS], [KOPERASI], [NUBESUBSCRIPTION], [PCB]," +
                " [AllowanceInAdvanced], [OtherDeductions], [TOTALEARNING], [TOTALDEDUCTION], [NE" +
                "TSALARY], [PositionName]) VALUES (@EmployeeId, @EmployeeNo, @SalaryMonth, @Emplo" +
                "yeeName, @DateOfJoining, @EPFNumber, @SOCSONumber, @SIPNumber, @NRIC, @BankAccou" +
                "ntNo, @BankName, @BasicSalary, @TotalWorkingDays, @DaysAbsent, @OTHours, @OT_Amo" +
                "unt, @LOP, @POB, @NEC, @SECONDMENT, @SPECIAL, @COLA, @MOBILEALLOWANCE, @ALLOWANC" +
                "E, @BONUS, @EXGRATIA, @EPF, @EPFUNION, @SOCSO, @SOCSOUNION, @SIP, @SIPUNION, @IN" +
                "COMETAX, @GMIS, @GELA, @BIMBLOAN, @HOMECARLOANS, @OTHERLOAN, @TOTALLOAN, @OTHERS" +
                ", @KOPERASI, @NUBESUBSCRIPTION, @PCB, @AllowanceInAdvanced, @OtherDeductions, @T" +
                "OTALEARNING, @TOTALDEDUCTION, @NETSALARY, @PositionName);\r\nSELECT Id, EmployeeId" +
                ", EmployeeNo, SalaryMonth, EmployeeName, DateOfJoining, EPFNumber, SOCSONumber, " +
                "SIPNumber, NRIC, BankAccountNo, BankName, BasicSalary, TotalWorkingDays, DaysAbs" +
                "ent, OTHours, OT_Amount, LOP, POB, NEC, SECONDMENT, SPECIAL, COLA, MOBILEALLOWAN" +
                "CE, ALLOWANCE, BONUS, EXGRATIA, EPF, EPFUNION, SOCSO, SOCSOUNION, SIP, SIPUNION," +
                " INCOMETAX, GMIS, GELA, BIMBLOAN, HOMECARLOANS, OTHERLOAN, TOTALLOAN, OTHERS, KO" +
                "PERASI, NUBESUBSCRIPTION, PCB, AllowanceInAdvanced, OtherDeductions, TOTALEARNIN" +
                "G, TOTALDEDUCTION, NETSALARY, PositionName FROM MonthlySalary WHERE (Id = SCOPE_" +
                "IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalaryMonth", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalaryMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfJoining", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfJoining", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPFNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPFNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOCSONumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOCSONumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIPNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIPNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NRIC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankAccountNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BasicSalary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BasicSalary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalWorkingDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalWorkingDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DaysAbsent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DaysAbsent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHours", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OT_Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LOP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "POB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NEC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NEC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SECONDMENT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SECONDMENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPECIAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SPECIAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COLA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "COLA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MOBILEALLOWANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "MOBILEALLOWANCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALLOWANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ALLOWANCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BONUS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BONUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXGRATIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXGRATIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPF", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EPF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPFUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EPFUNION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOCSO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SOCSO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOCSOUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SOCSOUNION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SIP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIPUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SIPUNION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INCOMETAX", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INCOMETAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GMIS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "GMIS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GELA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "GELA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BIMBLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BIMBLOAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOMECARLOANS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HOMECARLOANS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHERLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHERLOAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTALLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALLOAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHERS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHERS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOPERASI", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOPERASI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NUBESUBSCRIPTION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NUBESUBSCRIPTION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PCB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowanceInAdvanced", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "AllowanceInAdvanced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherDeductions", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OtherDeductions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTALEARNING", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALEARNING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTALDEDUCTION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALDEDUCTION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NETSALARY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NETSALARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PositionName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PositionName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[MonthlySalary] SET [EmployeeId] = @EmployeeId, [EmployeeNo] = @Empl" +
                "oyeeNo, [SalaryMonth] = @SalaryMonth, [EmployeeName] = @EmployeeName, [DateOfJoi" +
                "ning] = @DateOfJoining, [EPFNumber] = @EPFNumber, [SOCSONumber] = @SOCSONumber, " +
                "[SIPNumber] = @SIPNumber, [NRIC] = @NRIC, [BankAccountNo] = @BankAccountNo, [Ban" +
                "kName] = @BankName, [BasicSalary] = @BasicSalary, [TotalWorkingDays] = @TotalWor" +
                "kingDays, [DaysAbsent] = @DaysAbsent, [OTHours] = @OTHours, [OT_Amount] = @OT_Am" +
                "ount, [LOP] = @LOP, [POB] = @POB, [NEC] = @NEC, [SECONDMENT] = @SECONDMENT, [SPE" +
                "CIAL] = @SPECIAL, [COLA] = @COLA, [MOBILEALLOWANCE] = @MOBILEALLOWANCE, [ALLOWAN" +
                "CE] = @ALLOWANCE, [BONUS] = @BONUS, [EXGRATIA] = @EXGRATIA, [EPF] = @EPF, [EPFUN" +
                "ION] = @EPFUNION, [SOCSO] = @SOCSO, [SOCSOUNION] = @SOCSOUNION, [SIP] = @SIP, [S" +
                "IPUNION] = @SIPUNION, [INCOMETAX] = @INCOMETAX, [GMIS] = @GMIS, [GELA] = @GELA, " +
                "[BIMBLOAN] = @BIMBLOAN, [HOMECARLOANS] = @HOMECARLOANS, [OTHERLOAN] = @OTHERLOAN" +
                ", [TOTALLOAN] = @TOTALLOAN, [OTHERS] = @OTHERS, [KOPERASI] = @KOPERASI, [NUBESUB" +
                "SCRIPTION] = @NUBESUBSCRIPTION, [PCB] = @PCB, [AllowanceInAdvanced] = @Allowance" +
                "InAdvanced, [OtherDeductions] = @OtherDeductions, [TOTALEARNING] = @TOTALEARNING" +
                ", [TOTALDEDUCTION] = @TOTALDEDUCTION, [NETSALARY] = @NETSALARY, [PositionName] =" +
                " @PositionName WHERE (([Id] = @Original_Id) AND ([EmployeeId] = @Original_Employ" +
                "eeId) AND ([EmployeeNo] = @Original_EmployeeNo) AND ((@IsNull_SalaryMonth = 1 AN" +
                "D [SalaryMonth] IS NULL) OR ([SalaryMonth] = @Original_SalaryMonth)) AND ((@IsNu" +
                "ll_EmployeeName = 1 AND [EmployeeName] IS NULL) OR ([EmployeeName] = @Original_E" +
                "mployeeName)) AND ((@IsNull_DateOfJoining = 1 AND [DateOfJoining] IS NULL) OR ([" +
                "DateOfJoining] = @Original_DateOfJoining)) AND ((@IsNull_EPFNumber = 1 AND [EPFN" +
                "umber] IS NULL) OR ([EPFNumber] = @Original_EPFNumber)) AND ((@IsNull_SOCSONumbe" +
                "r = 1 AND [SOCSONumber] IS NULL) OR ([SOCSONumber] = @Original_SOCSONumber)) AND" +
                " ((@IsNull_SIPNumber = 1 AND [SIPNumber] IS NULL) OR ([SIPNumber] = @Original_SI" +
                "PNumber)) AND ((@IsNull_NRIC = 1 AND [NRIC] IS NULL) OR ([NRIC] = @Original_NRIC" +
                ")) AND ((@IsNull_BankAccountNo = 1 AND [BankAccountNo] IS NULL) OR ([BankAccount" +
                "No] = @Original_BankAccountNo)) AND ((@IsNull_BankName = 1 AND [BankName] IS NUL" +
                "L) OR ([BankName] = @Original_BankName)) AND ([BasicSalary] = @Original_BasicSal" +
                "ary) AND ([TotalWorkingDays] = @Original_TotalWorkingDays) AND ([DaysAbsent] = @" +
                "Original_DaysAbsent) AND ([OTHours] = @Original_OTHours) AND ([OT_Amount] = @Ori" +
                "ginal_OT_Amount) AND ([LOP] = @Original_LOP) AND ([POB] = @Original_POB) AND ([N" +
                "EC] = @Original_NEC) AND ([SECONDMENT] = @Original_SECONDMENT) AND ([SPECIAL] = " +
                "@Original_SPECIAL) AND ([COLA] = @Original_COLA) AND ([MOBILEALLOWANCE] = @Origi" +
                "nal_MOBILEALLOWANCE) AND ([ALLOWANCE] = @Original_ALLOWANCE) AND ([BONUS] = @Ori" +
                "ginal_BONUS) AND ([EXGRATIA] = @Original_EXGRATIA) AND ([EPF] = @Original_EPF) A" +
                "ND ([EPFUNION] = @Original_EPFUNION) AND ([SOCSO] = @Original_SOCSO) AND ([SOCSO" +
                "UNION] = @Original_SOCSOUNION) AND ([SIP] = @Original_SIP) AND ([SIPUNION] = @Or" +
                "iginal_SIPUNION) AND ([INCOMETAX] = @Original_INCOMETAX) AND ([GMIS] = @Original" +
                "_GMIS) AND ([GELA] = @Original_GELA) AND ([BIMBLOAN] = @Original_BIMBLOAN) AND (" +
                "[HOMECARLOANS] = @Original_HOMECARLOANS) AND ([OTHERLOAN] = @Original_OTHERLOAN)" +
                " AND ([TOTALLOAN] = @Original_TOTALLOAN) AND ([OTHERS] = @Original_OTHERS) AND (" +
                "[KOPERASI] = @Original_KOPERASI) AND ([NUBESUBSCRIPTION] = @Original_NUBESUBSCRI" +
                "PTION) AND ([PCB] = @Original_PCB) AND ([AllowanceInAdvanced] = @Original_Allowa" +
                "nceInAdvanced) AND ([OtherDeductions] = @Original_OtherDeductions) AND ([TOTALEA" +
                "RNING] = @Original_TOTALEARNING) AND ([TOTALDEDUCTION] = @Original_TOTALDEDUCTIO" +
                "N) AND ([NETSALARY] = @Original_NETSALARY) AND ((@IsNull_PositionName = 1 AND [P" +
                "ositionName] IS NULL) OR ([PositionName] = @Original_PositionName)));\r\nSELECT Id" +
                ", EmployeeId, EmployeeNo, SalaryMonth, EmployeeName, DateOfJoining, EPFNumber, S" +
                "OCSONumber, SIPNumber, NRIC, BankAccountNo, BankName, BasicSalary, TotalWorkingD" +
                "ays, DaysAbsent, OTHours, OT_Amount, LOP, POB, NEC, SECONDMENT, SPECIAL, COLA, M" +
                "OBILEALLOWANCE, ALLOWANCE, BONUS, EXGRATIA, EPF, EPFUNION, SOCSO, SOCSOUNION, SI" +
                "P, SIPUNION, INCOMETAX, GMIS, GELA, BIMBLOAN, HOMECARLOANS, OTHERLOAN, TOTALLOAN" +
                ", OTHERS, KOPERASI, NUBESUBSCRIPTION, PCB, AllowanceInAdvanced, OtherDeductions," +
                " TOTALEARNING, TOTALDEDUCTION, NETSALARY, PositionName FROM MonthlySalary WHERE " +
                "(Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalaryMonth", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalaryMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOfJoining", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfJoining", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPFNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPFNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOCSONumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOCSONumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIPNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIPNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NRIC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankAccountNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BasicSalary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BasicSalary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalWorkingDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalWorkingDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DaysAbsent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DaysAbsent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHours", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OT_Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LOP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "POB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NEC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NEC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SECONDMENT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SECONDMENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPECIAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SPECIAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COLA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "COLA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MOBILEALLOWANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "MOBILEALLOWANCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALLOWANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ALLOWANCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BONUS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BONUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXGRATIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXGRATIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPF", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EPF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPFUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EPFUNION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOCSO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SOCSO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOCSOUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SOCSOUNION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SIP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIPUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SIPUNION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INCOMETAX", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INCOMETAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GMIS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "GMIS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GELA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "GELA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BIMBLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BIMBLOAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOMECARLOANS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HOMECARLOANS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHERLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHERLOAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTALLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALLOAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHERS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHERS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOPERASI", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOPERASI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NUBESUBSCRIPTION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NUBESUBSCRIPTION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PCB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AllowanceInAdvanced", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "AllowanceInAdvanced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherDeductions", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OtherDeductions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTALEARNING", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALEARNING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTALDEDUCTION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALDEDUCTION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NETSALARY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NETSALARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PositionName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PositionName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SalaryMonth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalaryMonth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalaryMonth", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalaryMonth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EmployeeName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateOfJoining", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfJoining", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateOfJoining", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOfJoining", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPFNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPFNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPFNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPFNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SOCSONumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOCSONumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOCSONumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOCSONumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SIPNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIPNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SIPNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIPNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NRIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NRIC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BankAccountNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BankAccountNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BankName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BankName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BasicSalary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BasicSalary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalWorkingDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalWorkingDays", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DaysAbsent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DaysAbsent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTHours", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHours", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OT_Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OT_Amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LOP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "POB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NEC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NEC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SECONDMENT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SECONDMENT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SPECIAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SPECIAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COLA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "COLA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MOBILEALLOWANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "MOBILEALLOWANCE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ALLOWANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ALLOWANCE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BONUS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BONUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXGRATIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXGRATIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPF", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EPF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPFUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EPFUNION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOCSO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SOCSO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOCSOUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SOCSOUNION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SIP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SIP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SIPUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SIPUNION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INCOMETAX", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INCOMETAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GMIS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "GMIS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GELA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "GELA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BIMBLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BIMBLOAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOMECARLOANS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HOMECARLOANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTHERLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHERLOAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTALLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALLOAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTHERS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHERS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOPERASI", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOPERASI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NUBESUBSCRIPTION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NUBESUBSCRIPTION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PCB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PCB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AllowanceInAdvanced", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "AllowanceInAdvanced", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherDeductions", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OtherDeductions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTALEARNING", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALEARNING", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTALDEDUCTION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALDEDUCTION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NETSALARY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NETSALARY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PositionName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PositionName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PositionName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PositionName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NUBE.PAYROLL.PL.Properties.Settings.Default.RipuTestConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id, EmployeeId, EmployeeNo, SalaryMonth, EmployeeName, DateOfJoining, EPFNumber, SOCSONumber, SIPNumber, NRIC, BankAccountNo, BankName, BasicSalary, TotalWorkingDays, DaysAbsent, OTHours, OT_Amount, LOP, POB, NEC, SECONDMENT, SPECIAL, COLA, MOBILEALLOWANCE, ALLOWANCE, BONUS, EXGRATIA, EPF, EPFUNION, SOCSO, SOCSOUNION, SIP, SIPUNION, INCOMETAX, GMIS, GELA, BIMBLOAN, HOMECARLOANS, OTHERLOAN, TOTALLOAN, OTHERS, KOPERASI, NUBESUBSCRIPTION, PCB, AllowanceInAdvanced, OtherDeductions, TOTALEARNING, TOTALDEDUCTION, NETSALARY, PositionName FROM dbo.MonthlySalary";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RipuTestDataSet2.MonthlySalaryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RipuTestDataSet2.MonthlySalaryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RipuTestDataSet2.MonthlySalaryDataTable dataTable = new RipuTestDataSet2.MonthlySalaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RipuTestDataSet2.MonthlySalaryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RipuTestDataSet2 dataSet) {
            return this.Adapter.Update(dataSet, "MonthlySalary");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Id, 
                    int Original_EmployeeId, 
                    int Original_EmployeeNo, 
                    global::System.Nullable<global::System.DateTime> Original_SalaryMonth, 
                    string Original_EmployeeName, 
                    global::System.Nullable<global::System.DateTime> Original_DateOfJoining, 
                    string Original_EPFNumber, 
                    string Original_SOCSONumber, 
                    string Original_SIPNumber, 
                    string Original_NRIC, 
                    string Original_BankAccountNo, 
                    string Original_BankName, 
                    decimal Original_BasicSalary, 
                    decimal Original_TotalWorkingDays, 
                    decimal Original_DaysAbsent, 
                    decimal Original_OTHours, 
                    decimal Original_OT_Amount, 
                    decimal Original_LOP, 
                    decimal Original_POB, 
                    decimal Original_NEC, 
                    decimal Original_SECONDMENT, 
                    decimal Original_SPECIAL, 
                    decimal Original_COLA, 
                    decimal Original_MOBILEALLOWANCE, 
                    decimal Original_ALLOWANCE, 
                    decimal Original_BONUS, 
                    decimal Original_EXGRATIA, 
                    decimal Original_EPF, 
                    decimal Original_EPFUNION, 
                    decimal Original_SOCSO, 
                    decimal Original_SOCSOUNION, 
                    decimal Original_SIP, 
                    decimal Original_SIPUNION, 
                    decimal Original_INCOMETAX, 
                    decimal Original_GMIS, 
                    decimal Original_GELA, 
                    decimal Original_BIMBLOAN, 
                    decimal Original_HOMECARLOANS, 
                    decimal Original_OTHERLOAN, 
                    decimal Original_TOTALLOAN, 
                    decimal Original_OTHERS, 
                    decimal Original_KOPERASI, 
                    decimal Original_NUBESUBSCRIPTION, 
                    decimal Original_PCB, 
                    decimal Original_AllowanceInAdvanced, 
                    decimal Original_OtherDeductions, 
                    decimal Original_TOTALEARNING, 
                    decimal Original_TOTALDEDUCTION, 
                    decimal Original_NETSALARY, 
                    string Original_PositionName) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_EmployeeId));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_EmployeeNo));
            if ((Original_SalaryMonth.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_SalaryMonth.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_EmployeeName == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_EmployeeName));
            }
            if ((Original_DateOfJoining.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_DateOfJoining.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_EPFNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_EPFNumber));
            }
            if ((Original_SOCSONumber == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_SOCSONumber));
            }
            if ((Original_SIPNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_SIPNumber));
            }
            if ((Original_NRIC == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_NRIC));
            }
            if ((Original_BankAccountNo == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_BankAccountNo));
            }
            if ((Original_BankName == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_BankName));
            }
            this.Adapter.DeleteCommand.Parameters[21].Value = ((decimal)(Original_BasicSalary));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_TotalWorkingDays));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_DaysAbsent));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_OTHours));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((decimal)(Original_OT_Amount));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_LOP));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((decimal)(Original_POB));
            this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_NEC));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((decimal)(Original_SECONDMENT));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((decimal)(Original_SPECIAL));
            this.Adapter.DeleteCommand.Parameters[31].Value = ((decimal)(Original_COLA));
            this.Adapter.DeleteCommand.Parameters[32].Value = ((decimal)(Original_MOBILEALLOWANCE));
            this.Adapter.DeleteCommand.Parameters[33].Value = ((decimal)(Original_ALLOWANCE));
            this.Adapter.DeleteCommand.Parameters[34].Value = ((decimal)(Original_BONUS));
            this.Adapter.DeleteCommand.Parameters[35].Value = ((decimal)(Original_EXGRATIA));
            this.Adapter.DeleteCommand.Parameters[36].Value = ((decimal)(Original_EPF));
            this.Adapter.DeleteCommand.Parameters[37].Value = ((decimal)(Original_EPFUNION));
            this.Adapter.DeleteCommand.Parameters[38].Value = ((decimal)(Original_SOCSO));
            this.Adapter.DeleteCommand.Parameters[39].Value = ((decimal)(Original_SOCSOUNION));
            this.Adapter.DeleteCommand.Parameters[40].Value = ((decimal)(Original_SIP));
            this.Adapter.DeleteCommand.Parameters[41].Value = ((decimal)(Original_SIPUNION));
            this.Adapter.DeleteCommand.Parameters[42].Value = ((decimal)(Original_INCOMETAX));
            this.Adapter.DeleteCommand.Parameters[43].Value = ((decimal)(Original_GMIS));
            this.Adapter.DeleteCommand.Parameters[44].Value = ((decimal)(Original_GELA));
            this.Adapter.DeleteCommand.Parameters[45].Value = ((decimal)(Original_BIMBLOAN));
            this.Adapter.DeleteCommand.Parameters[46].Value = ((decimal)(Original_HOMECARLOANS));
            this.Adapter.DeleteCommand.Parameters[47].Value = ((decimal)(Original_OTHERLOAN));
            this.Adapter.DeleteCommand.Parameters[48].Value = ((decimal)(Original_TOTALLOAN));
            this.Adapter.DeleteCommand.Parameters[49].Value = ((decimal)(Original_OTHERS));
            this.Adapter.DeleteCommand.Parameters[50].Value = ((decimal)(Original_KOPERASI));
            this.Adapter.DeleteCommand.Parameters[51].Value = ((decimal)(Original_NUBESUBSCRIPTION));
            this.Adapter.DeleteCommand.Parameters[52].Value = ((decimal)(Original_PCB));
            this.Adapter.DeleteCommand.Parameters[53].Value = ((decimal)(Original_AllowanceInAdvanced));
            this.Adapter.DeleteCommand.Parameters[54].Value = ((decimal)(Original_OtherDeductions));
            this.Adapter.DeleteCommand.Parameters[55].Value = ((decimal)(Original_TOTALEARNING));
            this.Adapter.DeleteCommand.Parameters[56].Value = ((decimal)(Original_TOTALDEDUCTION));
            this.Adapter.DeleteCommand.Parameters[57].Value = ((decimal)(Original_NETSALARY));
            if ((Original_PositionName == null)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((string)(Original_PositionName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int EmployeeId, 
                    int EmployeeNo, 
                    global::System.Nullable<global::System.DateTime> SalaryMonth, 
                    string EmployeeName, 
                    global::System.Nullable<global::System.DateTime> DateOfJoining, 
                    string EPFNumber, 
                    string SOCSONumber, 
                    string SIPNumber, 
                    string NRIC, 
                    string BankAccountNo, 
                    string BankName, 
                    decimal BasicSalary, 
                    decimal TotalWorkingDays, 
                    decimal DaysAbsent, 
                    decimal OTHours, 
                    decimal OT_Amount, 
                    decimal LOP, 
                    decimal POB, 
                    decimal NEC, 
                    decimal SECONDMENT, 
                    decimal SPECIAL, 
                    decimal COLA, 
                    decimal MOBILEALLOWANCE, 
                    decimal ALLOWANCE, 
                    decimal BONUS, 
                    decimal EXGRATIA, 
                    decimal EPF, 
                    decimal EPFUNION, 
                    decimal SOCSO, 
                    decimal SOCSOUNION, 
                    decimal SIP, 
                    decimal SIPUNION, 
                    decimal INCOMETAX, 
                    decimal GMIS, 
                    decimal GELA, 
                    decimal BIMBLOAN, 
                    decimal HOMECARLOANS, 
                    decimal OTHERLOAN, 
                    decimal TOTALLOAN, 
                    decimal OTHERS, 
                    decimal KOPERASI, 
                    decimal NUBESUBSCRIPTION, 
                    decimal PCB, 
                    decimal AllowanceInAdvanced, 
                    decimal OtherDeductions, 
                    decimal TOTALEARNING, 
                    decimal TOTALDEDUCTION, 
                    decimal NETSALARY, 
                    string PositionName) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(EmployeeId));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(EmployeeNo));
            if ((SalaryMonth.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(SalaryMonth.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((EmployeeName == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(EmployeeName));
            }
            if ((DateOfJoining.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(DateOfJoining.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((EPFNumber == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(EPFNumber));
            }
            if ((SOCSONumber == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(SOCSONumber));
            }
            if ((SIPNumber == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SIPNumber));
            }
            if ((NRIC == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(NRIC));
            }
            if ((BankAccountNo == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(BankAccountNo));
            }
            if ((BankName == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(BankName));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(BasicSalary));
            this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(TotalWorkingDays));
            this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(DaysAbsent));
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(OTHours));
            this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(OT_Amount));
            this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(LOP));
            this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(POB));
            this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(NEC));
            this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(SECONDMENT));
            this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(SPECIAL));
            this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(COLA));
            this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(MOBILEALLOWANCE));
            this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(ALLOWANCE));
            this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(BONUS));
            this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(EXGRATIA));
            this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(EPF));
            this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(EPFUNION));
            this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(SOCSO));
            this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(SOCSOUNION));
            this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(SIP));
            this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(SIPUNION));
            this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(INCOMETAX));
            this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(GMIS));
            this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(GELA));
            this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(BIMBLOAN));
            this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(HOMECARLOANS));
            this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(OTHERLOAN));
            this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(TOTALLOAN));
            this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(OTHERS));
            this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(KOPERASI));
            this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(NUBESUBSCRIPTION));
            this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(PCB));
            this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(AllowanceInAdvanced));
            this.Adapter.InsertCommand.Parameters[44].Value = ((decimal)(OtherDeductions));
            this.Adapter.InsertCommand.Parameters[45].Value = ((decimal)(TOTALEARNING));
            this.Adapter.InsertCommand.Parameters[46].Value = ((decimal)(TOTALDEDUCTION));
            this.Adapter.InsertCommand.Parameters[47].Value = ((decimal)(NETSALARY));
            if ((PositionName == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(PositionName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int EmployeeId, 
                    int EmployeeNo, 
                    global::System.Nullable<global::System.DateTime> SalaryMonth, 
                    string EmployeeName, 
                    global::System.Nullable<global::System.DateTime> DateOfJoining, 
                    string EPFNumber, 
                    string SOCSONumber, 
                    string SIPNumber, 
                    string NRIC, 
                    string BankAccountNo, 
                    string BankName, 
                    decimal BasicSalary, 
                    decimal TotalWorkingDays, 
                    decimal DaysAbsent, 
                    decimal OTHours, 
                    decimal OT_Amount, 
                    decimal LOP, 
                    decimal POB, 
                    decimal NEC, 
                    decimal SECONDMENT, 
                    decimal SPECIAL, 
                    decimal COLA, 
                    decimal MOBILEALLOWANCE, 
                    decimal ALLOWANCE, 
                    decimal BONUS, 
                    decimal EXGRATIA, 
                    decimal EPF, 
                    decimal EPFUNION, 
                    decimal SOCSO, 
                    decimal SOCSOUNION, 
                    decimal SIP, 
                    decimal SIPUNION, 
                    decimal INCOMETAX, 
                    decimal GMIS, 
                    decimal GELA, 
                    decimal BIMBLOAN, 
                    decimal HOMECARLOANS, 
                    decimal OTHERLOAN, 
                    decimal TOTALLOAN, 
                    decimal OTHERS, 
                    decimal KOPERASI, 
                    decimal NUBESUBSCRIPTION, 
                    decimal PCB, 
                    decimal AllowanceInAdvanced, 
                    decimal OtherDeductions, 
                    decimal TOTALEARNING, 
                    decimal TOTALDEDUCTION, 
                    decimal NETSALARY, 
                    string PositionName, 
                    int Original_Id, 
                    int Original_EmployeeId, 
                    int Original_EmployeeNo, 
                    global::System.Nullable<global::System.DateTime> Original_SalaryMonth, 
                    string Original_EmployeeName, 
                    global::System.Nullable<global::System.DateTime> Original_DateOfJoining, 
                    string Original_EPFNumber, 
                    string Original_SOCSONumber, 
                    string Original_SIPNumber, 
                    string Original_NRIC, 
                    string Original_BankAccountNo, 
                    string Original_BankName, 
                    decimal Original_BasicSalary, 
                    decimal Original_TotalWorkingDays, 
                    decimal Original_DaysAbsent, 
                    decimal Original_OTHours, 
                    decimal Original_OT_Amount, 
                    decimal Original_LOP, 
                    decimal Original_POB, 
                    decimal Original_NEC, 
                    decimal Original_SECONDMENT, 
                    decimal Original_SPECIAL, 
                    decimal Original_COLA, 
                    decimal Original_MOBILEALLOWANCE, 
                    decimal Original_ALLOWANCE, 
                    decimal Original_BONUS, 
                    decimal Original_EXGRATIA, 
                    decimal Original_EPF, 
                    decimal Original_EPFUNION, 
                    decimal Original_SOCSO, 
                    decimal Original_SOCSOUNION, 
                    decimal Original_SIP, 
                    decimal Original_SIPUNION, 
                    decimal Original_INCOMETAX, 
                    decimal Original_GMIS, 
                    decimal Original_GELA, 
                    decimal Original_BIMBLOAN, 
                    decimal Original_HOMECARLOANS, 
                    decimal Original_OTHERLOAN, 
                    decimal Original_TOTALLOAN, 
                    decimal Original_OTHERS, 
                    decimal Original_KOPERASI, 
                    decimal Original_NUBESUBSCRIPTION, 
                    decimal Original_PCB, 
                    decimal Original_AllowanceInAdvanced, 
                    decimal Original_OtherDeductions, 
                    decimal Original_TOTALEARNING, 
                    decimal Original_TOTALDEDUCTION, 
                    decimal Original_NETSALARY, 
                    string Original_PositionName, 
                    int Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(EmployeeId));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(EmployeeNo));
            if ((SalaryMonth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(SalaryMonth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((EmployeeName == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(EmployeeName));
            }
            if ((DateOfJoining.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(DateOfJoining.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((EPFNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(EPFNumber));
            }
            if ((SOCSONumber == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(SOCSONumber));
            }
            if ((SIPNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SIPNumber));
            }
            if ((NRIC == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(NRIC));
            }
            if ((BankAccountNo == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(BankAccountNo));
            }
            if ((BankName == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(BankName));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(BasicSalary));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(TotalWorkingDays));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(DaysAbsent));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(OTHours));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(OT_Amount));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(LOP));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(POB));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(NEC));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(SECONDMENT));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(SPECIAL));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(COLA));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(MOBILEALLOWANCE));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(ALLOWANCE));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(BONUS));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(EXGRATIA));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(EPF));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(EPFUNION));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(SOCSO));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(SOCSOUNION));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(SIP));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(SIPUNION));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(INCOMETAX));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(GMIS));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(GELA));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(BIMBLOAN));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(HOMECARLOANS));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(OTHERLOAN));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(TOTALLOAN));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(OTHERS));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(KOPERASI));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(NUBESUBSCRIPTION));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(PCB));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(AllowanceInAdvanced));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(OtherDeductions));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(TOTALEARNING));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(TOTALDEDUCTION));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(NETSALARY));
            if ((PositionName == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(PositionName));
            }
            this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_Id));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((int)(Original_EmployeeId));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(Original_EmployeeNo));
            if ((Original_SalaryMonth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(Original_SalaryMonth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_EmployeeName == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_EmployeeName));
            }
            if ((Original_DateOfJoining.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((System.DateTime)(Original_DateOfJoining.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_EPFNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_EPFNumber));
            }
            if ((Original_SOCSONumber == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_SOCSONumber));
            }
            if ((Original_SIPNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_SIPNumber));
            }
            if ((Original_NRIC == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_NRIC));
            }
            if ((Original_BankAccountNo == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_BankAccountNo));
            }
            if ((Original_BankName == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_BankName));
            }
            this.Adapter.UpdateCommand.Parameters[70].Value = ((decimal)(Original_BasicSalary));
            this.Adapter.UpdateCommand.Parameters[71].Value = ((decimal)(Original_TotalWorkingDays));
            this.Adapter.UpdateCommand.Parameters[72].Value = ((decimal)(Original_DaysAbsent));
            this.Adapter.UpdateCommand.Parameters[73].Value = ((decimal)(Original_OTHours));
            this.Adapter.UpdateCommand.Parameters[74].Value = ((decimal)(Original_OT_Amount));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((decimal)(Original_LOP));
            this.Adapter.UpdateCommand.Parameters[76].Value = ((decimal)(Original_POB));
            this.Adapter.UpdateCommand.Parameters[77].Value = ((decimal)(Original_NEC));
            this.Adapter.UpdateCommand.Parameters[78].Value = ((decimal)(Original_SECONDMENT));
            this.Adapter.UpdateCommand.Parameters[79].Value = ((decimal)(Original_SPECIAL));
            this.Adapter.UpdateCommand.Parameters[80].Value = ((decimal)(Original_COLA));
            this.Adapter.UpdateCommand.Parameters[81].Value = ((decimal)(Original_MOBILEALLOWANCE));
            this.Adapter.UpdateCommand.Parameters[82].Value = ((decimal)(Original_ALLOWANCE));
            this.Adapter.UpdateCommand.Parameters[83].Value = ((decimal)(Original_BONUS));
            this.Adapter.UpdateCommand.Parameters[84].Value = ((decimal)(Original_EXGRATIA));
            this.Adapter.UpdateCommand.Parameters[85].Value = ((decimal)(Original_EPF));
            this.Adapter.UpdateCommand.Parameters[86].Value = ((decimal)(Original_EPFUNION));
            this.Adapter.UpdateCommand.Parameters[87].Value = ((decimal)(Original_SOCSO));
            this.Adapter.UpdateCommand.Parameters[88].Value = ((decimal)(Original_SOCSOUNION));
            this.Adapter.UpdateCommand.Parameters[89].Value = ((decimal)(Original_SIP));
            this.Adapter.UpdateCommand.Parameters[90].Value = ((decimal)(Original_SIPUNION));
            this.Adapter.UpdateCommand.Parameters[91].Value = ((decimal)(Original_INCOMETAX));
            this.Adapter.UpdateCommand.Parameters[92].Value = ((decimal)(Original_GMIS));
            this.Adapter.UpdateCommand.Parameters[93].Value = ((decimal)(Original_GELA));
            this.Adapter.UpdateCommand.Parameters[94].Value = ((decimal)(Original_BIMBLOAN));
            this.Adapter.UpdateCommand.Parameters[95].Value = ((decimal)(Original_HOMECARLOANS));
            this.Adapter.UpdateCommand.Parameters[96].Value = ((decimal)(Original_OTHERLOAN));
            this.Adapter.UpdateCommand.Parameters[97].Value = ((decimal)(Original_TOTALLOAN));
            this.Adapter.UpdateCommand.Parameters[98].Value = ((decimal)(Original_OTHERS));
            this.Adapter.UpdateCommand.Parameters[99].Value = ((decimal)(Original_KOPERASI));
            this.Adapter.UpdateCommand.Parameters[100].Value = ((decimal)(Original_NUBESUBSCRIPTION));
            this.Adapter.UpdateCommand.Parameters[101].Value = ((decimal)(Original_PCB));
            this.Adapter.UpdateCommand.Parameters[102].Value = ((decimal)(Original_AllowanceInAdvanced));
            this.Adapter.UpdateCommand.Parameters[103].Value = ((decimal)(Original_OtherDeductions));
            this.Adapter.UpdateCommand.Parameters[104].Value = ((decimal)(Original_TOTALEARNING));
            this.Adapter.UpdateCommand.Parameters[105].Value = ((decimal)(Original_TOTALDEDUCTION));
            this.Adapter.UpdateCommand.Parameters[106].Value = ((decimal)(Original_NETSALARY));
            if ((Original_PositionName == null)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(Original_PositionName));
            }
            this.Adapter.UpdateCommand.Parameters[109].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int EmployeeId, 
                    int EmployeeNo, 
                    global::System.Nullable<global::System.DateTime> SalaryMonth, 
                    string EmployeeName, 
                    global::System.Nullable<global::System.DateTime> DateOfJoining, 
                    string EPFNumber, 
                    string SOCSONumber, 
                    string SIPNumber, 
                    string NRIC, 
                    string BankAccountNo, 
                    string BankName, 
                    decimal BasicSalary, 
                    decimal TotalWorkingDays, 
                    decimal DaysAbsent, 
                    decimal OTHours, 
                    decimal OT_Amount, 
                    decimal LOP, 
                    decimal POB, 
                    decimal NEC, 
                    decimal SECONDMENT, 
                    decimal SPECIAL, 
                    decimal COLA, 
                    decimal MOBILEALLOWANCE, 
                    decimal ALLOWANCE, 
                    decimal BONUS, 
                    decimal EXGRATIA, 
                    decimal EPF, 
                    decimal EPFUNION, 
                    decimal SOCSO, 
                    decimal SOCSOUNION, 
                    decimal SIP, 
                    decimal SIPUNION, 
                    decimal INCOMETAX, 
                    decimal GMIS, 
                    decimal GELA, 
                    decimal BIMBLOAN, 
                    decimal HOMECARLOANS, 
                    decimal OTHERLOAN, 
                    decimal TOTALLOAN, 
                    decimal OTHERS, 
                    decimal KOPERASI, 
                    decimal NUBESUBSCRIPTION, 
                    decimal PCB, 
                    decimal AllowanceInAdvanced, 
                    decimal OtherDeductions, 
                    decimal TOTALEARNING, 
                    decimal TOTALDEDUCTION, 
                    decimal NETSALARY, 
                    string PositionName, 
                    int Original_Id, 
                    int Original_EmployeeId, 
                    int Original_EmployeeNo, 
                    global::System.Nullable<global::System.DateTime> Original_SalaryMonth, 
                    string Original_EmployeeName, 
                    global::System.Nullable<global::System.DateTime> Original_DateOfJoining, 
                    string Original_EPFNumber, 
                    string Original_SOCSONumber, 
                    string Original_SIPNumber, 
                    string Original_NRIC, 
                    string Original_BankAccountNo, 
                    string Original_BankName, 
                    decimal Original_BasicSalary, 
                    decimal Original_TotalWorkingDays, 
                    decimal Original_DaysAbsent, 
                    decimal Original_OTHours, 
                    decimal Original_OT_Amount, 
                    decimal Original_LOP, 
                    decimal Original_POB, 
                    decimal Original_NEC, 
                    decimal Original_SECONDMENT, 
                    decimal Original_SPECIAL, 
                    decimal Original_COLA, 
                    decimal Original_MOBILEALLOWANCE, 
                    decimal Original_ALLOWANCE, 
                    decimal Original_BONUS, 
                    decimal Original_EXGRATIA, 
                    decimal Original_EPF, 
                    decimal Original_EPFUNION, 
                    decimal Original_SOCSO, 
                    decimal Original_SOCSOUNION, 
                    decimal Original_SIP, 
                    decimal Original_SIPUNION, 
                    decimal Original_INCOMETAX, 
                    decimal Original_GMIS, 
                    decimal Original_GELA, 
                    decimal Original_BIMBLOAN, 
                    decimal Original_HOMECARLOANS, 
                    decimal Original_OTHERLOAN, 
                    decimal Original_TOTALLOAN, 
                    decimal Original_OTHERS, 
                    decimal Original_KOPERASI, 
                    decimal Original_NUBESUBSCRIPTION, 
                    decimal Original_PCB, 
                    decimal Original_AllowanceInAdvanced, 
                    decimal Original_OtherDeductions, 
                    decimal Original_TOTALEARNING, 
                    decimal Original_TOTALDEDUCTION, 
                    decimal Original_NETSALARY, 
                    string Original_PositionName) {
            return this.Update(EmployeeId, EmployeeNo, SalaryMonth, EmployeeName, DateOfJoining, EPFNumber, SOCSONumber, SIPNumber, NRIC, BankAccountNo, BankName, BasicSalary, TotalWorkingDays, DaysAbsent, OTHours, OT_Amount, LOP, POB, NEC, SECONDMENT, SPECIAL, COLA, MOBILEALLOWANCE, ALLOWANCE, BONUS, EXGRATIA, EPF, EPFUNION, SOCSO, SOCSOUNION, SIP, SIPUNION, INCOMETAX, GMIS, GELA, BIMBLOAN, HOMECARLOANS, OTHERLOAN, TOTALLOAN, OTHERS, KOPERASI, NUBESUBSCRIPTION, PCB, AllowanceInAdvanced, OtherDeductions, TOTALEARNING, TOTALDEDUCTION, NETSALARY, PositionName, Original_Id, Original_EmployeeId, Original_EmployeeNo, Original_SalaryMonth, Original_EmployeeName, Original_DateOfJoining, Original_EPFNumber, Original_SOCSONumber, Original_SIPNumber, Original_NRIC, Original_BankAccountNo, Original_BankName, Original_BasicSalary, Original_TotalWorkingDays, Original_DaysAbsent, Original_OTHours, Original_OT_Amount, Original_LOP, Original_POB, Original_NEC, Original_SECONDMENT, Original_SPECIAL, Original_COLA, Original_MOBILEALLOWANCE, Original_ALLOWANCE, Original_BONUS, Original_EXGRATIA, Original_EPF, Original_EPFUNION, Original_SOCSO, Original_SOCSOUNION, Original_SIP, Original_SIPUNION, Original_INCOMETAX, Original_GMIS, Original_GELA, Original_BIMBLOAN, Original_HOMECARLOANS, Original_OTHERLOAN, Original_TOTALLOAN, Original_OTHERS, Original_KOPERASI, Original_NUBESUBSCRIPTION, Original_PCB, Original_AllowanceInAdvanced, Original_OtherDeductions, Original_TOTALEARNING, Original_TOTALDEDUCTION, Original_NETSALARY, Original_PositionName, Original_Id);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private MonthlySalaryTableAdapter _monthlySalaryTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MonthlySalaryTableAdapter MonthlySalaryTableAdapter {
            get {
                return this._monthlySalaryTableAdapter;
            }
            set {
                this._monthlySalaryTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._monthlySalaryTableAdapter != null) 
                            && (this._monthlySalaryTableAdapter.Connection != null))) {
                    return this._monthlySalaryTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._monthlySalaryTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(RipuTestDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._monthlySalaryTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MonthlySalary.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._monthlySalaryTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(RipuTestDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._monthlySalaryTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MonthlySalary.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._monthlySalaryTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(RipuTestDataSet2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._monthlySalaryTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MonthlySalary.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._monthlySalaryTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(RipuTestDataSet2 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._monthlySalaryTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._monthlySalaryTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._monthlySalaryTableAdapter != null)) {
                    revertConnections.Add(this._monthlySalaryTableAdapter, this._monthlySalaryTableAdapter.Connection);
                    this._monthlySalaryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._monthlySalaryTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._monthlySalaryTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._monthlySalaryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._monthlySalaryTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._monthlySalaryTableAdapter != null)) {
                    this._monthlySalaryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._monthlySalaryTableAdapter]));
                    this._monthlySalaryTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591