//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace NUBE.PAYROLL.PL {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BizSoftDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BizSoftDataSet : global::System.Data.DataSet {
        
        private MonthlySalaryDataTable tableMonthlySalary;
        
        private SPTESTDAILYATTENDANCEDataTable tableSPTESTDAILYATTENDANCE;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public BizSoftDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected BizSoftDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MonthlySalary"] != null)) {
                    base.Tables.Add(new MonthlySalaryDataTable(ds.Tables["MonthlySalary"]));
                }
                if ((ds.Tables["SPTESTDAILYATTENDANCE"] != null)) {
                    base.Tables.Add(new SPTESTDAILYATTENDANCEDataTable(ds.Tables["SPTESTDAILYATTENDANCE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MonthlySalaryDataTable MonthlySalary {
            get {
                return this.tableMonthlySalary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SPTESTDAILYATTENDANCEDataTable SPTESTDAILYATTENDANCE {
            get {
                return this.tableSPTESTDAILYATTENDANCE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            BizSoftDataSet cln = ((BizSoftDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MonthlySalary"] != null)) {
                    base.Tables.Add(new MonthlySalaryDataTable(ds.Tables["MonthlySalary"]));
                }
                if ((ds.Tables["SPTESTDAILYATTENDANCE"] != null)) {
                    base.Tables.Add(new SPTESTDAILYATTENDANCEDataTable(ds.Tables["SPTESTDAILYATTENDANCE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableMonthlySalary = ((MonthlySalaryDataTable)(base.Tables["MonthlySalary"]));
            if ((initTable == true)) {
                if ((this.tableMonthlySalary != null)) {
                    this.tableMonthlySalary.InitVars();
                }
            }
            this.tableSPTESTDAILYATTENDANCE = ((SPTESTDAILYATTENDANCEDataTable)(base.Tables["SPTESTDAILYATTENDANCE"]));
            if ((initTable == true)) {
                if ((this.tableSPTESTDAILYATTENDANCE != null)) {
                    this.tableSPTESTDAILYATTENDANCE.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "BizSoftDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BizSoftDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMonthlySalary = new MonthlySalaryDataTable();
            base.Tables.Add(this.tableMonthlySalary);
            this.tableSPTESTDAILYATTENDANCE = new SPTESTDAILYATTENDANCEDataTable();
            base.Tables.Add(this.tableSPTESTDAILYATTENDANCE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeMonthlySalary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeSPTESTDAILYATTENDANCE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BizSoftDataSet ds = new BizSoftDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void MonthlySalaryRowChangeEventHandler(object sender, MonthlySalaryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void SPTESTDAILYATTENDANCERowChangeEventHandler(object sender, SPTESTDAILYATTENDANCERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MonthlySalaryDataTable : global::System.Data.TypedTableBase<MonthlySalaryRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnEmployeeId;
            
            private global::System.Data.DataColumn columnEmployeeNo;
            
            private global::System.Data.DataColumn columnSalaryMonth;
            
            private global::System.Data.DataColumn columnEmployeeName;
            
            private global::System.Data.DataColumn columnEPFNumber;
            
            private global::System.Data.DataColumn columnSOCSONumber;
            
            private global::System.Data.DataColumn columnNRIC;
            
            private global::System.Data.DataColumn columnBankAccountNo;
            
            private global::System.Data.DataColumn columnBasicSalary;
            
            private global::System.Data.DataColumn columnTotalWorkingDays;
            
            private global::System.Data.DataColumn columnDispatchAllowance;
            
            private global::System.Data.DataColumn columnDaysAbsent;
            
            private global::System.Data.DataColumn columnOTHours;
            
            private global::System.Data.DataColumn columnOT_Amount;
            
            private global::System.Data.DataColumn columnLOP_Leave;
            
            private global::System.Data.DataColumn columnLOP_Late;
            
            private global::System.Data.DataColumn columnPOB;
            
            private global::System.Data.DataColumn columnNEC;
            
            private global::System.Data.DataColumn columnSECONDMENT;
            
            private global::System.Data.DataColumn columnSPECIAL;
            
            private global::System.Data.DataColumn columnCOLA;
            
            private global::System.Data.DataColumn columnMOBILEALLOWANCE;
            
            private global::System.Data.DataColumn columnALLOWANCE;
            
            private global::System.Data.DataColumn columnBONUS;
            
            private global::System.Data.DataColumn columnEXGRATIA;
            
            private global::System.Data.DataColumn columnEPF;
            
            private global::System.Data.DataColumn columnEPFUNION;
            
            private global::System.Data.DataColumn columnSOCSO;
            
            private global::System.Data.DataColumn columnSOCSOUNION;
            
            private global::System.Data.DataColumn columnINCOMETAX;
            
            private global::System.Data.DataColumn columnGMIS;
            
            private global::System.Data.DataColumn columnGELA;
            
            private global::System.Data.DataColumn columnBIMBLOAN;
            
            private global::System.Data.DataColumn columnHOMECARLOANS;
            
            private global::System.Data.DataColumn columnOTHERLOAN;
            
            private global::System.Data.DataColumn columnTOTALLOAN;
            
            private global::System.Data.DataColumn columnOTHERS;
            
            private global::System.Data.DataColumn columnKOPERASI;
            
            private global::System.Data.DataColumn columnNUBESUBSCRIPTION;
            
            private global::System.Data.DataColumn columnPCB;
            
            private global::System.Data.DataColumn columnTOTALEARNING;
            
            private global::System.Data.DataColumn columnTOTALDEDUCTION;
            
            private global::System.Data.DataColumn columnNETSALARY;
            
            private global::System.Data.DataColumn columnPositionName;
            
            private global::System.Data.DataColumn columnDateOfJoining;
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnAllowanceInAdvanced;
            
            private global::System.Data.DataColumn columnOtherDeductions;
            
            private global::System.Data.DataColumn columnSIP;
            
            private global::System.Data.DataColumn columnSIPUNION;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnSIPNumber;
            
            private global::System.Data.DataColumn columnTotalAllowance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MonthlySalaryDataTable() {
                this.TableName = "MonthlySalary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal MonthlySalaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected MonthlySalaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EmployeeIdColumn {
                get {
                    return this.columnEmployeeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EmployeeNoColumn {
                get {
                    return this.columnEmployeeNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SalaryMonthColumn {
                get {
                    return this.columnSalaryMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EmployeeNameColumn {
                get {
                    return this.columnEmployeeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EPFNumberColumn {
                get {
                    return this.columnEPFNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SOCSONumberColumn {
                get {
                    return this.columnSOCSONumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NRICColumn {
                get {
                    return this.columnNRIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BankAccountNoColumn {
                get {
                    return this.columnBankAccountNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BasicSalaryColumn {
                get {
                    return this.columnBasicSalary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TotalWorkingDaysColumn {
                get {
                    return this.columnTotalWorkingDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DispatchAllowanceColumn {
                get {
                    return this.columnDispatchAllowance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DaysAbsentColumn {
                get {
                    return this.columnDaysAbsent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OTHoursColumn {
                get {
                    return this.columnOTHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OT_AmountColumn {
                get {
                    return this.columnOT_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOP_LeaveColumn {
                get {
                    return this.columnLOP_Leave;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LOP_LateColumn {
                get {
                    return this.columnLOP_Late;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn POBColumn {
                get {
                    return this.columnPOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NECColumn {
                get {
                    return this.columnNEC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SECONDMENTColumn {
                get {
                    return this.columnSECONDMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SPECIALColumn {
                get {
                    return this.columnSPECIAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn COLAColumn {
                get {
                    return this.columnCOLA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MOBILEALLOWANCEColumn {
                get {
                    return this.columnMOBILEALLOWANCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ALLOWANCEColumn {
                get {
                    return this.columnALLOWANCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BONUSColumn {
                get {
                    return this.columnBONUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EXGRATIAColumn {
                get {
                    return this.columnEXGRATIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EPFColumn {
                get {
                    return this.columnEPF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EPFUNIONColumn {
                get {
                    return this.columnEPFUNION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SOCSOColumn {
                get {
                    return this.columnSOCSO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SOCSOUNIONColumn {
                get {
                    return this.columnSOCSOUNION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn INCOMETAXColumn {
                get {
                    return this.columnINCOMETAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GMISColumn {
                get {
                    return this.columnGMIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GELAColumn {
                get {
                    return this.columnGELA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BIMBLOANColumn {
                get {
                    return this.columnBIMBLOAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HOMECARLOANSColumn {
                get {
                    return this.columnHOMECARLOANS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OTHERLOANColumn {
                get {
                    return this.columnOTHERLOAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TOTALLOANColumn {
                get {
                    return this.columnTOTALLOAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OTHERSColumn {
                get {
                    return this.columnOTHERS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KOPERASIColumn {
                get {
                    return this.columnKOPERASI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NUBESUBSCRIPTIONColumn {
                get {
                    return this.columnNUBESUBSCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PCBColumn {
                get {
                    return this.columnPCB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TOTALEARNINGColumn {
                get {
                    return this.columnTOTALEARNING;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TOTALDEDUCTIONColumn {
                get {
                    return this.columnTOTALDEDUCTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NETSALARYColumn {
                get {
                    return this.columnNETSALARY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PositionNameColumn {
                get {
                    return this.columnPositionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DateOfJoiningColumn {
                get {
                    return this.columnDateOfJoining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AllowanceInAdvancedColumn {
                get {
                    return this.columnAllowanceInAdvanced;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OtherDeductionsColumn {
                get {
                    return this.columnOtherDeductions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SIPColumn {
                get {
                    return this.columnSIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SIPUNIONColumn {
                get {
                    return this.columnSIPUNION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SIPNumberColumn {
                get {
                    return this.columnSIPNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TotalAllowanceColumn {
                get {
                    return this.columnTotalAllowance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MonthlySalaryRow this[int index] {
                get {
                    return ((MonthlySalaryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event MonthlySalaryRowChangeEventHandler MonthlySalaryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event MonthlySalaryRowChangeEventHandler MonthlySalaryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event MonthlySalaryRowChangeEventHandler MonthlySalaryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event MonthlySalaryRowChangeEventHandler MonthlySalaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddMonthlySalaryRow(MonthlySalaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MonthlySalaryRow AddMonthlySalaryRow(
                        int EmployeeId, 
                        int EmployeeNo, 
                        System.DateTime SalaryMonth, 
                        string EmployeeName, 
                        string EPFNumber, 
                        string SOCSONumber, 
                        string NRIC, 
                        string BankAccountNo, 
                        decimal BasicSalary, 
                        decimal TotalWorkingDays, 
                        decimal DispatchAllowance, 
                        decimal DaysAbsent, 
                        decimal OTHours, 
                        decimal OT_Amount, 
                        decimal LOP_Leave, 
                        decimal LOP_Late, 
                        decimal POB, 
                        decimal NEC, 
                        decimal SECONDMENT, 
                        decimal SPECIAL, 
                        decimal COLA, 
                        decimal MOBILEALLOWANCE, 
                        decimal ALLOWANCE, 
                        decimal BONUS, 
                        decimal EXGRATIA, 
                        decimal EPF, 
                        decimal EPFUNION, 
                        decimal SOCSO, 
                        decimal SOCSOUNION, 
                        decimal INCOMETAX, 
                        decimal GMIS, 
                        decimal GELA, 
                        decimal BIMBLOAN, 
                        decimal HOMECARLOANS, 
                        decimal OTHERLOAN, 
                        decimal TOTALLOAN, 
                        decimal OTHERS, 
                        decimal KOPERASI, 
                        decimal NUBESUBSCRIPTION, 
                        decimal PCB, 
                        decimal TOTALEARNING, 
                        decimal TOTALDEDUCTION, 
                        decimal NETSALARY, 
                        string PositionName, 
                        System.DateTime DateOfJoining, 
                        string BankName, 
                        decimal AllowanceInAdvanced, 
                        decimal OtherDeductions, 
                        string SIP, 
                        string SIPUNION, 
                        string Remarks, 
                        string SIPNumber, 
                        decimal TotalAllowance) {
                MonthlySalaryRow rowMonthlySalaryRow = ((MonthlySalaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        EmployeeId,
                        EmployeeNo,
                        SalaryMonth,
                        EmployeeName,
                        EPFNumber,
                        SOCSONumber,
                        NRIC,
                        BankAccountNo,
                        BasicSalary,
                        TotalWorkingDays,
                        DispatchAllowance,
                        DaysAbsent,
                        OTHours,
                        OT_Amount,
                        LOP_Leave,
                        LOP_Late,
                        POB,
                        NEC,
                        SECONDMENT,
                        SPECIAL,
                        COLA,
                        MOBILEALLOWANCE,
                        ALLOWANCE,
                        BONUS,
                        EXGRATIA,
                        EPF,
                        EPFUNION,
                        SOCSO,
                        SOCSOUNION,
                        INCOMETAX,
                        GMIS,
                        GELA,
                        BIMBLOAN,
                        HOMECARLOANS,
                        OTHERLOAN,
                        TOTALLOAN,
                        OTHERS,
                        KOPERASI,
                        NUBESUBSCRIPTION,
                        PCB,
                        TOTALEARNING,
                        TOTALDEDUCTION,
                        NETSALARY,
                        PositionName,
                        DateOfJoining,
                        BankName,
                        AllowanceInAdvanced,
                        OtherDeductions,
                        SIP,
                        SIPUNION,
                        Remarks,
                        SIPNumber,
                        TotalAllowance};
                rowMonthlySalaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMonthlySalaryRow);
                return rowMonthlySalaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MonthlySalaryRow FindById(int Id) {
                return ((MonthlySalaryRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MonthlySalaryDataTable cln = ((MonthlySalaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MonthlySalaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnEmployeeId = base.Columns["EmployeeId"];
                this.columnEmployeeNo = base.Columns["EmployeeNo"];
                this.columnSalaryMonth = base.Columns["SalaryMonth"];
                this.columnEmployeeName = base.Columns["EmployeeName"];
                this.columnEPFNumber = base.Columns["EPFNumber"];
                this.columnSOCSONumber = base.Columns["SOCSONumber"];
                this.columnNRIC = base.Columns["NRIC"];
                this.columnBankAccountNo = base.Columns["BankAccountNo"];
                this.columnBasicSalary = base.Columns["BasicSalary"];
                this.columnTotalWorkingDays = base.Columns["TotalWorkingDays"];
                this.columnDispatchAllowance = base.Columns["DispatchAllowance"];
                this.columnDaysAbsent = base.Columns["DaysAbsent"];
                this.columnOTHours = base.Columns["OTHours"];
                this.columnOT_Amount = base.Columns["OT_Amount"];
                this.columnLOP_Leave = base.Columns["LOP_Leave"];
                this.columnLOP_Late = base.Columns["LOP_Late"];
                this.columnPOB = base.Columns["POB"];
                this.columnNEC = base.Columns["NEC"];
                this.columnSECONDMENT = base.Columns["SECONDMENT"];
                this.columnSPECIAL = base.Columns["SPECIAL"];
                this.columnCOLA = base.Columns["COLA"];
                this.columnMOBILEALLOWANCE = base.Columns["MOBILEALLOWANCE"];
                this.columnALLOWANCE = base.Columns["ALLOWANCE"];
                this.columnBONUS = base.Columns["BONUS"];
                this.columnEXGRATIA = base.Columns["EXGRATIA"];
                this.columnEPF = base.Columns["EPF"];
                this.columnEPFUNION = base.Columns["EPFUNION"];
                this.columnSOCSO = base.Columns["SOCSO"];
                this.columnSOCSOUNION = base.Columns["SOCSOUNION"];
                this.columnINCOMETAX = base.Columns["INCOMETAX"];
                this.columnGMIS = base.Columns["GMIS"];
                this.columnGELA = base.Columns["GELA"];
                this.columnBIMBLOAN = base.Columns["BIMBLOAN"];
                this.columnHOMECARLOANS = base.Columns["HOMECARLOANS"];
                this.columnOTHERLOAN = base.Columns["OTHERLOAN"];
                this.columnTOTALLOAN = base.Columns["TOTALLOAN"];
                this.columnOTHERS = base.Columns["OTHERS"];
                this.columnKOPERASI = base.Columns["KOPERASI"];
                this.columnNUBESUBSCRIPTION = base.Columns["NUBESUBSCRIPTION"];
                this.columnPCB = base.Columns["PCB"];
                this.columnTOTALEARNING = base.Columns["TOTALEARNING"];
                this.columnTOTALDEDUCTION = base.Columns["TOTALDEDUCTION"];
                this.columnNETSALARY = base.Columns["NETSALARY"];
                this.columnPositionName = base.Columns["PositionName"];
                this.columnDateOfJoining = base.Columns["DateOfJoining"];
                this.columnBankName = base.Columns["BankName"];
                this.columnAllowanceInAdvanced = base.Columns["AllowanceInAdvanced"];
                this.columnOtherDeductions = base.Columns["OtherDeductions"];
                this.columnSIP = base.Columns["SIP"];
                this.columnSIPUNION = base.Columns["SIPUNION"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnSIPNumber = base.Columns["SIPNumber"];
                this.columnTotalAllowance = base.Columns["TotalAllowance"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnEmployeeId = new global::System.Data.DataColumn("EmployeeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeId);
                this.columnEmployeeNo = new global::System.Data.DataColumn("EmployeeNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeNo);
                this.columnSalaryMonth = new global::System.Data.DataColumn("SalaryMonth", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryMonth);
                this.columnEmployeeName = new global::System.Data.DataColumn("EmployeeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeName);
                this.columnEPFNumber = new global::System.Data.DataColumn("EPFNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPFNumber);
                this.columnSOCSONumber = new global::System.Data.DataColumn("SOCSONumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOCSONumber);
                this.columnNRIC = new global::System.Data.DataColumn("NRIC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNRIC);
                this.columnBankAccountNo = new global::System.Data.DataColumn("BankAccountNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAccountNo);
                this.columnBasicSalary = new global::System.Data.DataColumn("BasicSalary", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasicSalary);
                this.columnTotalWorkingDays = new global::System.Data.DataColumn("TotalWorkingDays", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalWorkingDays);
                this.columnDispatchAllowance = new global::System.Data.DataColumn("DispatchAllowance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDispatchAllowance);
                this.columnDaysAbsent = new global::System.Data.DataColumn("DaysAbsent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaysAbsent);
                this.columnOTHours = new global::System.Data.DataColumn("OTHours", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHours);
                this.columnOT_Amount = new global::System.Data.DataColumn("OT_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_Amount);
                this.columnLOP_Leave = new global::System.Data.DataColumn("LOP_Leave", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOP_Leave);
                this.columnLOP_Late = new global::System.Data.DataColumn("LOP_Late", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOP_Late);
                this.columnPOB = new global::System.Data.DataColumn("POB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOB);
                this.columnNEC = new global::System.Data.DataColumn("NEC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNEC);
                this.columnSECONDMENT = new global::System.Data.DataColumn("SECONDMENT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSECONDMENT);
                this.columnSPECIAL = new global::System.Data.DataColumn("SPECIAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECIAL);
                this.columnCOLA = new global::System.Data.DataColumn("COLA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLA);
                this.columnMOBILEALLOWANCE = new global::System.Data.DataColumn("MOBILEALLOWANCE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOBILEALLOWANCE);
                this.columnALLOWANCE = new global::System.Data.DataColumn("ALLOWANCE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALLOWANCE);
                this.columnBONUS = new global::System.Data.DataColumn("BONUS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBONUS);
                this.columnEXGRATIA = new global::System.Data.DataColumn("EXGRATIA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXGRATIA);
                this.columnEPF = new global::System.Data.DataColumn("EPF", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPF);
                this.columnEPFUNION = new global::System.Data.DataColumn("EPFUNION", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPFUNION);
                this.columnSOCSO = new global::System.Data.DataColumn("SOCSO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOCSO);
                this.columnSOCSOUNION = new global::System.Data.DataColumn("SOCSOUNION", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOCSOUNION);
                this.columnINCOMETAX = new global::System.Data.DataColumn("INCOMETAX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCOMETAX);
                this.columnGMIS = new global::System.Data.DataColumn("GMIS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGMIS);
                this.columnGELA = new global::System.Data.DataColumn("GELA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGELA);
                this.columnBIMBLOAN = new global::System.Data.DataColumn("BIMBLOAN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIMBLOAN);
                this.columnHOMECARLOANS = new global::System.Data.DataColumn("HOMECARLOANS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOMECARLOANS);
                this.columnOTHERLOAN = new global::System.Data.DataColumn("OTHERLOAN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHERLOAN);
                this.columnTOTALLOAN = new global::System.Data.DataColumn("TOTALLOAN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTALLOAN);
                this.columnOTHERS = new global::System.Data.DataColumn("OTHERS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHERS);
                this.columnKOPERASI = new global::System.Data.DataColumn("KOPERASI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKOPERASI);
                this.columnNUBESUBSCRIPTION = new global::System.Data.DataColumn("NUBESUBSCRIPTION", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUBESUBSCRIPTION);
                this.columnPCB = new global::System.Data.DataColumn("PCB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCB);
                this.columnTOTALEARNING = new global::System.Data.DataColumn("TOTALEARNING", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTALEARNING);
                this.columnTOTALDEDUCTION = new global::System.Data.DataColumn("TOTALDEDUCTION", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTALDEDUCTION);
                this.columnNETSALARY = new global::System.Data.DataColumn("NETSALARY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNETSALARY);
                this.columnPositionName = new global::System.Data.DataColumn("PositionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPositionName);
                this.columnDateOfJoining = new global::System.Data.DataColumn("DateOfJoining", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfJoining);
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnAllowanceInAdvanced = new global::System.Data.DataColumn("AllowanceInAdvanced", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowanceInAdvanced);
                this.columnOtherDeductions = new global::System.Data.DataColumn("OtherDeductions", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherDeductions);
                this.columnSIP = new global::System.Data.DataColumn("SIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIP);
                this.columnSIPUNION = new global::System.Data.DataColumn("SIPUNION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIPUNION);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnSIPNumber = new global::System.Data.DataColumn("SIPNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIPNumber);
                this.columnTotalAllowance = new global::System.Data.DataColumn("TotalAllowance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAllowance);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnEmployeeId.AllowDBNull = false;
                this.columnEmployeeNo.AllowDBNull = false;
                this.columnEmployeeName.MaxLength = 50;
                this.columnEPFNumber.MaxLength = 50;
                this.columnSOCSONumber.MaxLength = 50;
                this.columnNRIC.MaxLength = 50;
                this.columnBankAccountNo.MaxLength = 50;
                this.columnBasicSalary.AllowDBNull = false;
                this.columnTotalWorkingDays.AllowDBNull = false;
                this.columnDaysAbsent.AllowDBNull = false;
                this.columnOTHours.AllowDBNull = false;
                this.columnOT_Amount.AllowDBNull = false;
                this.columnPOB.AllowDBNull = false;
                this.columnNEC.AllowDBNull = false;
                this.columnSECONDMENT.AllowDBNull = false;
                this.columnSPECIAL.AllowDBNull = false;
                this.columnCOLA.AllowDBNull = false;
                this.columnMOBILEALLOWANCE.AllowDBNull = false;
                this.columnALLOWANCE.AllowDBNull = false;
                this.columnBONUS.AllowDBNull = false;
                this.columnEXGRATIA.AllowDBNull = false;
                this.columnEPF.AllowDBNull = false;
                this.columnEPFUNION.AllowDBNull = false;
                this.columnSOCSO.AllowDBNull = false;
                this.columnSOCSOUNION.AllowDBNull = false;
                this.columnINCOMETAX.AllowDBNull = false;
                this.columnGMIS.AllowDBNull = false;
                this.columnGELA.AllowDBNull = false;
                this.columnBIMBLOAN.AllowDBNull = false;
                this.columnHOMECARLOANS.AllowDBNull = false;
                this.columnOTHERLOAN.AllowDBNull = false;
                this.columnTOTALLOAN.AllowDBNull = false;
                this.columnOTHERS.AllowDBNull = false;
                this.columnKOPERASI.AllowDBNull = false;
                this.columnNUBESUBSCRIPTION.AllowDBNull = false;
                this.columnPCB.AllowDBNull = false;
                this.columnTOTALEARNING.AllowDBNull = false;
                this.columnTOTALDEDUCTION.AllowDBNull = false;
                this.columnNETSALARY.AllowDBNull = false;
                this.columnPositionName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MonthlySalaryRow NewMonthlySalaryRow() {
                return ((MonthlySalaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MonthlySalaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MonthlySalaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MonthlySalaryRowChanged != null)) {
                    this.MonthlySalaryRowChanged(this, new MonthlySalaryRowChangeEvent(((MonthlySalaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MonthlySalaryRowChanging != null)) {
                    this.MonthlySalaryRowChanging(this, new MonthlySalaryRowChangeEvent(((MonthlySalaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MonthlySalaryRowDeleted != null)) {
                    this.MonthlySalaryRowDeleted(this, new MonthlySalaryRowChangeEvent(((MonthlySalaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MonthlySalaryRowDeleting != null)) {
                    this.MonthlySalaryRowDeleting(this, new MonthlySalaryRowChangeEvent(((MonthlySalaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveMonthlySalaryRow(MonthlySalaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BizSoftDataSet ds = new BizSoftDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MonthlySalaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SPTESTDAILYATTENDANCEDataTable : global::System.Data.TypedTableBase<SPTESTDAILYATTENDANCERow> {
            
            private global::System.Data.DataColumn columnRNO;
            
            private global::System.Data.DataColumn columnEMPLOYEEID;
            
            private global::System.Data.DataColumn columnMEMBERSHIPNO;
            
            private global::System.Data.DataColumn columnEMPLOYEENAME;
            
            private global::System.Data.DataColumn columnPOSITIONNAME;
            
            private global::System.Data.DataColumn columnATTDATE;
            
            private global::System.Data.DataColumn columnINTIME;
            
            private global::System.Data.DataColumn columnOUTTIME;
            
            private global::System.Data.DataColumn columnWORKING_HOURS;
            
            private global::System.Data.DataColumn columnWORKING_MINUTES;
            
            private global::System.Data.DataColumn columnWITHPERMISSION;
            
            private global::System.Data.DataColumn columnOT_HOURS;
            
            private global::System.Data.DataColumn columnOT_MINUTES;
            
            private global::System.Data.DataColumn columnREMARKS;
            
            private global::System.Data.DataColumn columnISFULLDAYLEAVE;
            
            private global::System.Data.DataColumn columnISHALFDAYLEAVE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SPTESTDAILYATTENDANCEDataTable() {
                this.TableName = "SPTESTDAILYATTENDANCE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SPTESTDAILYATTENDANCEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected SPTESTDAILYATTENDANCEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RNOColumn {
                get {
                    return this.columnRNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EMPLOYEEIDColumn {
                get {
                    return this.columnEMPLOYEEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MEMBERSHIPNOColumn {
                get {
                    return this.columnMEMBERSHIPNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EMPLOYEENAMEColumn {
                get {
                    return this.columnEMPLOYEENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn POSITIONNAMEColumn {
                get {
                    return this.columnPOSITIONNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ATTDATEColumn {
                get {
                    return this.columnATTDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn INTIMEColumn {
                get {
                    return this.columnINTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OUTTIMEColumn {
                get {
                    return this.columnOUTTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WORKING_HOURSColumn {
                get {
                    return this.columnWORKING_HOURS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WORKING_MINUTESColumn {
                get {
                    return this.columnWORKING_MINUTES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WITHPERMISSIONColumn {
                get {
                    return this.columnWITHPERMISSION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OT_HOURSColumn {
                get {
                    return this.columnOT_HOURS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OT_MINUTESColumn {
                get {
                    return this.columnOT_MINUTES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn REMARKSColumn {
                get {
                    return this.columnREMARKS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ISFULLDAYLEAVEColumn {
                get {
                    return this.columnISFULLDAYLEAVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ISHALFDAYLEAVEColumn {
                get {
                    return this.columnISHALFDAYLEAVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SPTESTDAILYATTENDANCERow this[int index] {
                get {
                    return ((SPTESTDAILYATTENDANCERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event SPTESTDAILYATTENDANCERowChangeEventHandler SPTESTDAILYATTENDANCERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event SPTESTDAILYATTENDANCERowChangeEventHandler SPTESTDAILYATTENDANCERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event SPTESTDAILYATTENDANCERowChangeEventHandler SPTESTDAILYATTENDANCERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event SPTESTDAILYATTENDANCERowChangeEventHandler SPTESTDAILYATTENDANCERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddSPTESTDAILYATTENDANCERow(SPTESTDAILYATTENDANCERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SPTESTDAILYATTENDANCERow AddSPTESTDAILYATTENDANCERow(
                        long RNO, 
                        int EMPLOYEEID, 
                        int MEMBERSHIPNO, 
                        string EMPLOYEENAME, 
                        string POSITIONNAME, 
                        string ATTDATE, 
                        System.TimeSpan INTIME, 
                        System.TimeSpan OUTTIME, 
                        int WORKING_HOURS, 
                        decimal WORKING_MINUTES, 
                        bool WITHPERMISSION, 
                        int OT_HOURS, 
                        string OT_MINUTES, 
                        string REMARKS, 
                        bool ISFULLDAYLEAVE, 
                        bool ISHALFDAYLEAVE) {
                SPTESTDAILYATTENDANCERow rowSPTESTDAILYATTENDANCERow = ((SPTESTDAILYATTENDANCERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RNO,
                        EMPLOYEEID,
                        MEMBERSHIPNO,
                        EMPLOYEENAME,
                        POSITIONNAME,
                        ATTDATE,
                        INTIME,
                        OUTTIME,
                        WORKING_HOURS,
                        WORKING_MINUTES,
                        WITHPERMISSION,
                        OT_HOURS,
                        OT_MINUTES,
                        REMARKS,
                        ISFULLDAYLEAVE,
                        ISHALFDAYLEAVE};
                rowSPTESTDAILYATTENDANCERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSPTESTDAILYATTENDANCERow);
                return rowSPTESTDAILYATTENDANCERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SPTESTDAILYATTENDANCEDataTable cln = ((SPTESTDAILYATTENDANCEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SPTESTDAILYATTENDANCEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnRNO = base.Columns["RNO"];
                this.columnEMPLOYEEID = base.Columns["EMPLOYEEID"];
                this.columnMEMBERSHIPNO = base.Columns["MEMBERSHIPNO"];
                this.columnEMPLOYEENAME = base.Columns["EMPLOYEENAME"];
                this.columnPOSITIONNAME = base.Columns["POSITIONNAME"];
                this.columnATTDATE = base.Columns["ATTDATE"];
                this.columnINTIME = base.Columns["INTIME"];
                this.columnOUTTIME = base.Columns["OUTTIME"];
                this.columnWORKING_HOURS = base.Columns["WORKING_HOURS"];
                this.columnWORKING_MINUTES = base.Columns["WORKING_MINUTES"];
                this.columnWITHPERMISSION = base.Columns["WITHPERMISSION"];
                this.columnOT_HOURS = base.Columns["OT_HOURS"];
                this.columnOT_MINUTES = base.Columns["OT_MINUTES"];
                this.columnREMARKS = base.Columns["REMARKS"];
                this.columnISFULLDAYLEAVE = base.Columns["ISFULLDAYLEAVE"];
                this.columnISHALFDAYLEAVE = base.Columns["ISHALFDAYLEAVE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnRNO = new global::System.Data.DataColumn("RNO", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRNO);
                this.columnEMPLOYEEID = new global::System.Data.DataColumn("EMPLOYEEID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEEID);
                this.columnMEMBERSHIPNO = new global::System.Data.DataColumn("MEMBERSHIPNO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBERSHIPNO);
                this.columnEMPLOYEENAME = new global::System.Data.DataColumn("EMPLOYEENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPLOYEENAME);
                this.columnPOSITIONNAME = new global::System.Data.DataColumn("POSITIONNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSITIONNAME);
                this.columnATTDATE = new global::System.Data.DataColumn("ATTDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTDATE);
                this.columnINTIME = new global::System.Data.DataColumn("INTIME", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTIME);
                this.columnOUTTIME = new global::System.Data.DataColumn("OUTTIME", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUTTIME);
                this.columnWORKING_HOURS = new global::System.Data.DataColumn("WORKING_HOURS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWORKING_HOURS);
                this.columnWORKING_MINUTES = new global::System.Data.DataColumn("WORKING_MINUTES", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWORKING_MINUTES);
                this.columnWITHPERMISSION = new global::System.Data.DataColumn("WITHPERMISSION", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWITHPERMISSION);
                this.columnOT_HOURS = new global::System.Data.DataColumn("OT_HOURS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_HOURS);
                this.columnOT_MINUTES = new global::System.Data.DataColumn("OT_MINUTES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_MINUTES);
                this.columnREMARKS = new global::System.Data.DataColumn("REMARKS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARKS);
                this.columnISFULLDAYLEAVE = new global::System.Data.DataColumn("ISFULLDAYLEAVE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISFULLDAYLEAVE);
                this.columnISHALFDAYLEAVE = new global::System.Data.DataColumn("ISHALFDAYLEAVE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISHALFDAYLEAVE);
                this.columnRNO.ReadOnly = true;
                this.columnEMPLOYEEID.AllowDBNull = false;
                this.columnEMPLOYEENAME.MaxLength = 50;
                this.columnPOSITIONNAME.ReadOnly = true;
                this.columnPOSITIONNAME.MaxLength = 50;
                this.columnATTDATE.ReadOnly = true;
                this.columnATTDATE.MaxLength = 30;
                this.columnINTIME.ReadOnly = true;
                this.columnOUTTIME.ReadOnly = true;
                this.columnWORKING_HOURS.ReadOnly = true;
                this.columnWORKING_MINUTES.ReadOnly = true;
                this.columnWITHPERMISSION.AllowDBNull = false;
                this.columnOT_HOURS.ReadOnly = true;
                this.columnOT_MINUTES.ReadOnly = true;
                this.columnOT_MINUTES.MaxLength = 30;
                this.columnREMARKS.ReadOnly = true;
                this.columnREMARKS.MaxLength = 100;
                this.columnISFULLDAYLEAVE.AllowDBNull = false;
                this.columnISHALFDAYLEAVE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SPTESTDAILYATTENDANCERow NewSPTESTDAILYATTENDANCERow() {
                return ((SPTESTDAILYATTENDANCERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SPTESTDAILYATTENDANCERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SPTESTDAILYATTENDANCERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SPTESTDAILYATTENDANCERowChanged != null)) {
                    this.SPTESTDAILYATTENDANCERowChanged(this, new SPTESTDAILYATTENDANCERowChangeEvent(((SPTESTDAILYATTENDANCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SPTESTDAILYATTENDANCERowChanging != null)) {
                    this.SPTESTDAILYATTENDANCERowChanging(this, new SPTESTDAILYATTENDANCERowChangeEvent(((SPTESTDAILYATTENDANCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SPTESTDAILYATTENDANCERowDeleted != null)) {
                    this.SPTESTDAILYATTENDANCERowDeleted(this, new SPTESTDAILYATTENDANCERowChangeEvent(((SPTESTDAILYATTENDANCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SPTESTDAILYATTENDANCERowDeleting != null)) {
                    this.SPTESTDAILYATTENDANCERowDeleting(this, new SPTESTDAILYATTENDANCERowChangeEvent(((SPTESTDAILYATTENDANCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveSPTESTDAILYATTENDANCERow(SPTESTDAILYATTENDANCERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BizSoftDataSet ds = new BizSoftDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SPTESTDAILYATTENDANCEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MonthlySalaryRow : global::System.Data.DataRow {
            
            private MonthlySalaryDataTable tableMonthlySalary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal MonthlySalaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMonthlySalary = ((MonthlySalaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableMonthlySalary.IdColumn]));
                }
                set {
                    this[this.tableMonthlySalary.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int EmployeeId {
                get {
                    return ((int)(this[this.tableMonthlySalary.EmployeeIdColumn]));
                }
                set {
                    this[this.tableMonthlySalary.EmployeeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int EmployeeNo {
                get {
                    return ((int)(this[this.tableMonthlySalary.EmployeeNoColumn]));
                }
                set {
                    this[this.tableMonthlySalary.EmployeeNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime SalaryMonth {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMonthlySalary.SalaryMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalaryMonth\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.SalaryMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string EmployeeName {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalary.EmployeeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeName\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.EmployeeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string EPFNumber {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalary.EPFNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EPFNumber\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.EPFNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SOCSONumber {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalary.SOCSONumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOCSONumber\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.SOCSONumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NRIC {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalary.NRICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NRIC\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.NRICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BankAccountNo {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalary.BankAccountNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankAccountNo\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.BankAccountNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal BasicSalary {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.BasicSalaryColumn]));
                }
                set {
                    this[this.tableMonthlySalary.BasicSalaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal TotalWorkingDays {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.TotalWorkingDaysColumn]));
                }
                set {
                    this[this.tableMonthlySalary.TotalWorkingDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DispatchAllowance {
                get {
                    try {
                        return ((decimal)(this[this.tableMonthlySalary.DispatchAllowanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DispatchAllowance\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.DispatchAllowanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DaysAbsent {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.DaysAbsentColumn]));
                }
                set {
                    this[this.tableMonthlySalary.DaysAbsentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal OTHours {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.OTHoursColumn]));
                }
                set {
                    this[this.tableMonthlySalary.OTHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal OT_Amount {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.OT_AmountColumn]));
                }
                set {
                    this[this.tableMonthlySalary.OT_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal LOP_Leave {
                get {
                    try {
                        return ((decimal)(this[this.tableMonthlySalary.LOP_LeaveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOP_Leave\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.LOP_LeaveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal LOP_Late {
                get {
                    try {
                        return ((decimal)(this[this.tableMonthlySalary.LOP_LateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOP_Late\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.LOP_LateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal POB {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.POBColumn]));
                }
                set {
                    this[this.tableMonthlySalary.POBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal NEC {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.NECColumn]));
                }
                set {
                    this[this.tableMonthlySalary.NECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal SECONDMENT {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.SECONDMENTColumn]));
                }
                set {
                    this[this.tableMonthlySalary.SECONDMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal SPECIAL {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.SPECIALColumn]));
                }
                set {
                    this[this.tableMonthlySalary.SPECIALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal COLA {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.COLAColumn]));
                }
                set {
                    this[this.tableMonthlySalary.COLAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal MOBILEALLOWANCE {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.MOBILEALLOWANCEColumn]));
                }
                set {
                    this[this.tableMonthlySalary.MOBILEALLOWANCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal ALLOWANCE {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.ALLOWANCEColumn]));
                }
                set {
                    this[this.tableMonthlySalary.ALLOWANCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal BONUS {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.BONUSColumn]));
                }
                set {
                    this[this.tableMonthlySalary.BONUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal EXGRATIA {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.EXGRATIAColumn]));
                }
                set {
                    this[this.tableMonthlySalary.EXGRATIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal EPF {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.EPFColumn]));
                }
                set {
                    this[this.tableMonthlySalary.EPFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal EPFUNION {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.EPFUNIONColumn]));
                }
                set {
                    this[this.tableMonthlySalary.EPFUNIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal SOCSO {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.SOCSOColumn]));
                }
                set {
                    this[this.tableMonthlySalary.SOCSOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal SOCSOUNION {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.SOCSOUNIONColumn]));
                }
                set {
                    this[this.tableMonthlySalary.SOCSOUNIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal INCOMETAX {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.INCOMETAXColumn]));
                }
                set {
                    this[this.tableMonthlySalary.INCOMETAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal GMIS {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.GMISColumn]));
                }
                set {
                    this[this.tableMonthlySalary.GMISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal GELA {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.GELAColumn]));
                }
                set {
                    this[this.tableMonthlySalary.GELAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal BIMBLOAN {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.BIMBLOANColumn]));
                }
                set {
                    this[this.tableMonthlySalary.BIMBLOANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal HOMECARLOANS {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.HOMECARLOANSColumn]));
                }
                set {
                    this[this.tableMonthlySalary.HOMECARLOANSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal OTHERLOAN {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.OTHERLOANColumn]));
                }
                set {
                    this[this.tableMonthlySalary.OTHERLOANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal TOTALLOAN {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.TOTALLOANColumn]));
                }
                set {
                    this[this.tableMonthlySalary.TOTALLOANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal OTHERS {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.OTHERSColumn]));
                }
                set {
                    this[this.tableMonthlySalary.OTHERSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal KOPERASI {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.KOPERASIColumn]));
                }
                set {
                    this[this.tableMonthlySalary.KOPERASIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal NUBESUBSCRIPTION {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.NUBESUBSCRIPTIONColumn]));
                }
                set {
                    this[this.tableMonthlySalary.NUBESUBSCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal PCB {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.PCBColumn]));
                }
                set {
                    this[this.tableMonthlySalary.PCBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal TOTALEARNING {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.TOTALEARNINGColumn]));
                }
                set {
                    this[this.tableMonthlySalary.TOTALEARNINGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal TOTALDEDUCTION {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.TOTALDEDUCTIONColumn]));
                }
                set {
                    this[this.tableMonthlySalary.TOTALDEDUCTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal NETSALARY {
                get {
                    return ((decimal)(this[this.tableMonthlySalary.NETSALARYColumn]));
                }
                set {
                    this[this.tableMonthlySalary.NETSALARYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PositionName {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalary.PositionNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PositionName\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.PositionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DateOfJoining {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMonthlySalary.DateOfJoiningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOfJoining\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.DateOfJoiningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BankName {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalary.BankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankName\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal AllowanceInAdvanced {
                get {
                    try {
                        return ((decimal)(this[this.tableMonthlySalary.AllowanceInAdvancedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AllowanceInAdvanced\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.AllowanceInAdvancedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal OtherDeductions {
                get {
                    try {
                        return ((decimal)(this[this.tableMonthlySalary.OtherDeductionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherDeductions\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.OtherDeductionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SIP {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalary.SIPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIP\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.SIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SIPUNION {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalary.SIPUNIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIPUNION\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.SIPUNIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalary.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SIPNumber {
                get {
                    try {
                        return ((string)(this[this.tableMonthlySalary.SIPNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIPNumber\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.SIPNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal TotalAllowance {
                get {
                    try {
                        return ((decimal)(this[this.tableMonthlySalary.TotalAllowanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAllowance\' in table \'MonthlySalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMonthlySalary.TotalAllowanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSalaryMonthNull() {
                return this.IsNull(this.tableMonthlySalary.SalaryMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSalaryMonthNull() {
                this[this.tableMonthlySalary.SalaryMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEmployeeNameNull() {
                return this.IsNull(this.tableMonthlySalary.EmployeeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEmployeeNameNull() {
                this[this.tableMonthlySalary.EmployeeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEPFNumberNull() {
                return this.IsNull(this.tableMonthlySalary.EPFNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEPFNumberNull() {
                this[this.tableMonthlySalary.EPFNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSOCSONumberNull() {
                return this.IsNull(this.tableMonthlySalary.SOCSONumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSOCSONumberNull() {
                this[this.tableMonthlySalary.SOCSONumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNRICNull() {
                return this.IsNull(this.tableMonthlySalary.NRICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNRICNull() {
                this[this.tableMonthlySalary.NRICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBankAccountNoNull() {
                return this.IsNull(this.tableMonthlySalary.BankAccountNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBankAccountNoNull() {
                this[this.tableMonthlySalary.BankAccountNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDispatchAllowanceNull() {
                return this.IsNull(this.tableMonthlySalary.DispatchAllowanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDispatchAllowanceNull() {
                this[this.tableMonthlySalary.DispatchAllowanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOP_LeaveNull() {
                return this.IsNull(this.tableMonthlySalary.LOP_LeaveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOP_LeaveNull() {
                this[this.tableMonthlySalary.LOP_LeaveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLOP_LateNull() {
                return this.IsNull(this.tableMonthlySalary.LOP_LateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLOP_LateNull() {
                this[this.tableMonthlySalary.LOP_LateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPositionNameNull() {
                return this.IsNull(this.tableMonthlySalary.PositionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPositionNameNull() {
                this[this.tableMonthlySalary.PositionNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDateOfJoiningNull() {
                return this.IsNull(this.tableMonthlySalary.DateOfJoiningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDateOfJoiningNull() {
                this[this.tableMonthlySalary.DateOfJoiningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBankNameNull() {
                return this.IsNull(this.tableMonthlySalary.BankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBankNameNull() {
                this[this.tableMonthlySalary.BankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAllowanceInAdvancedNull() {
                return this.IsNull(this.tableMonthlySalary.AllowanceInAdvancedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAllowanceInAdvancedNull() {
                this[this.tableMonthlySalary.AllowanceInAdvancedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOtherDeductionsNull() {
                return this.IsNull(this.tableMonthlySalary.OtherDeductionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOtherDeductionsNull() {
                this[this.tableMonthlySalary.OtherDeductionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSIPNull() {
                return this.IsNull(this.tableMonthlySalary.SIPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSIPNull() {
                this[this.tableMonthlySalary.SIPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSIPUNIONNull() {
                return this.IsNull(this.tableMonthlySalary.SIPUNIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSIPUNIONNull() {
                this[this.tableMonthlySalary.SIPUNIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableMonthlySalary.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRemarksNull() {
                this[this.tableMonthlySalary.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSIPNumberNull() {
                return this.IsNull(this.tableMonthlySalary.SIPNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSIPNumberNull() {
                this[this.tableMonthlySalary.SIPNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTotalAllowanceNull() {
                return this.IsNull(this.tableMonthlySalary.TotalAllowanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTotalAllowanceNull() {
                this[this.tableMonthlySalary.TotalAllowanceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SPTESTDAILYATTENDANCERow : global::System.Data.DataRow {
            
            private SPTESTDAILYATTENDANCEDataTable tableSPTESTDAILYATTENDANCE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SPTESTDAILYATTENDANCERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSPTESTDAILYATTENDANCE = ((SPTESTDAILYATTENDANCEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long RNO {
                get {
                    try {
                        return ((long)(this[this.tableSPTESTDAILYATTENDANCE.RNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RNO\' in table \'SPTESTDAILYATTENDANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSPTESTDAILYATTENDANCE.RNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int EMPLOYEEID {
                get {
                    return ((int)(this[this.tableSPTESTDAILYATTENDANCE.EMPLOYEEIDColumn]));
                }
                set {
                    this[this.tableSPTESTDAILYATTENDANCE.EMPLOYEEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int MEMBERSHIPNO {
                get {
                    try {
                        return ((int)(this[this.tableSPTESTDAILYATTENDANCE.MEMBERSHIPNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMBERSHIPNO\' in table \'SPTESTDAILYATTENDANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSPTESTDAILYATTENDANCE.MEMBERSHIPNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string EMPLOYEENAME {
                get {
                    try {
                        return ((string)(this[this.tableSPTESTDAILYATTENDANCE.EMPLOYEENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMPLOYEENAME\' in table \'SPTESTDAILYATTENDANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSPTESTDAILYATTENDANCE.EMPLOYEENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string POSITIONNAME {
                get {
                    try {
                        return ((string)(this[this.tableSPTESTDAILYATTENDANCE.POSITIONNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POSITIONNAME\' in table \'SPTESTDAILYATTENDANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSPTESTDAILYATTENDANCE.POSITIONNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ATTDATE {
                get {
                    try {
                        return ((string)(this[this.tableSPTESTDAILYATTENDANCE.ATTDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ATTDATE\' in table \'SPTESTDAILYATTENDANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSPTESTDAILYATTENDANCE.ATTDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.TimeSpan INTIME {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableSPTESTDAILYATTENDANCE.INTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTIME\' in table \'SPTESTDAILYATTENDANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSPTESTDAILYATTENDANCE.INTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.TimeSpan OUTTIME {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableSPTESTDAILYATTENDANCE.OUTTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OUTTIME\' in table \'SPTESTDAILYATTENDANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSPTESTDAILYATTENDANCE.OUTTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int WORKING_HOURS {
                get {
                    try {
                        return ((int)(this[this.tableSPTESTDAILYATTENDANCE.WORKING_HOURSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WORKING_HOURS\' in table \'SPTESTDAILYATTENDANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSPTESTDAILYATTENDANCE.WORKING_HOURSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal WORKING_MINUTES {
                get {
                    try {
                        return ((decimal)(this[this.tableSPTESTDAILYATTENDANCE.WORKING_MINUTESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WORKING_MINUTES\' in table \'SPTESTDAILYATTENDANCE\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSPTESTDAILYATTENDANCE.WORKING_MINUTESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool WITHPERMISSION {
                get {
                    return ((bool)(this[this.tableSPTESTDAILYATTENDANCE.WITHPERMISSIONColumn]));
                }
                set {
                    this[this.tableSPTESTDAILYATTENDANCE.WITHPERMISSIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int OT_HOURS {
                get {
                    try {
                        return ((int)(this[this.tableSPTESTDAILYATTENDANCE.OT_HOURSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OT_HOURS\' in table \'SPTESTDAILYATTENDANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSPTESTDAILYATTENDANCE.OT_HOURSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OT_MINUTES {
                get {
                    try {
                        return ((string)(this[this.tableSPTESTDAILYATTENDANCE.OT_MINUTESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OT_MINUTES\' in table \'SPTESTDAILYATTENDANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSPTESTDAILYATTENDANCE.OT_MINUTESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string REMARKS {
                get {
                    try {
                        return ((string)(this[this.tableSPTESTDAILYATTENDANCE.REMARKSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REMARKS\' in table \'SPTESTDAILYATTENDANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSPTESTDAILYATTENDANCE.REMARKSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool ISFULLDAYLEAVE {
                get {
                    return ((bool)(this[this.tableSPTESTDAILYATTENDANCE.ISFULLDAYLEAVEColumn]));
                }
                set {
                    this[this.tableSPTESTDAILYATTENDANCE.ISFULLDAYLEAVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool ISHALFDAYLEAVE {
                get {
                    return ((bool)(this[this.tableSPTESTDAILYATTENDANCE.ISHALFDAYLEAVEColumn]));
                }
                set {
                    this[this.tableSPTESTDAILYATTENDANCE.ISHALFDAYLEAVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRNONull() {
                return this.IsNull(this.tableSPTESTDAILYATTENDANCE.RNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRNONull() {
                this[this.tableSPTESTDAILYATTENDANCE.RNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMEMBERSHIPNONull() {
                return this.IsNull(this.tableSPTESTDAILYATTENDANCE.MEMBERSHIPNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMEMBERSHIPNONull() {
                this[this.tableSPTESTDAILYATTENDANCE.MEMBERSHIPNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEMPLOYEENAMENull() {
                return this.IsNull(this.tableSPTESTDAILYATTENDANCE.EMPLOYEENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEMPLOYEENAMENull() {
                this[this.tableSPTESTDAILYATTENDANCE.EMPLOYEENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPOSITIONNAMENull() {
                return this.IsNull(this.tableSPTESTDAILYATTENDANCE.POSITIONNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPOSITIONNAMENull() {
                this[this.tableSPTESTDAILYATTENDANCE.POSITIONNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsATTDATENull() {
                return this.IsNull(this.tableSPTESTDAILYATTENDANCE.ATTDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetATTDATENull() {
                this[this.tableSPTESTDAILYATTENDANCE.ATTDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsINTIMENull() {
                return this.IsNull(this.tableSPTESTDAILYATTENDANCE.INTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetINTIMENull() {
                this[this.tableSPTESTDAILYATTENDANCE.INTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOUTTIMENull() {
                return this.IsNull(this.tableSPTESTDAILYATTENDANCE.OUTTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOUTTIMENull() {
                this[this.tableSPTESTDAILYATTENDANCE.OUTTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWORKING_HOURSNull() {
                return this.IsNull(this.tableSPTESTDAILYATTENDANCE.WORKING_HOURSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWORKING_HOURSNull() {
                this[this.tableSPTESTDAILYATTENDANCE.WORKING_HOURSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWORKING_MINUTESNull() {
                return this.IsNull(this.tableSPTESTDAILYATTENDANCE.WORKING_MINUTESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWORKING_MINUTESNull() {
                this[this.tableSPTESTDAILYATTENDANCE.WORKING_MINUTESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOT_HOURSNull() {
                return this.IsNull(this.tableSPTESTDAILYATTENDANCE.OT_HOURSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOT_HOURSNull() {
                this[this.tableSPTESTDAILYATTENDANCE.OT_HOURSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOT_MINUTESNull() {
                return this.IsNull(this.tableSPTESTDAILYATTENDANCE.OT_MINUTESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOT_MINUTESNull() {
                this[this.tableSPTESTDAILYATTENDANCE.OT_MINUTESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsREMARKSNull() {
                return this.IsNull(this.tableSPTESTDAILYATTENDANCE.REMARKSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetREMARKSNull() {
                this[this.tableSPTESTDAILYATTENDANCE.REMARKSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class MonthlySalaryRowChangeEvent : global::System.EventArgs {
            
            private MonthlySalaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MonthlySalaryRowChangeEvent(MonthlySalaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public MonthlySalaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class SPTESTDAILYATTENDANCERowChangeEvent : global::System.EventArgs {
            
            private SPTESTDAILYATTENDANCERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SPTESTDAILYATTENDANCERowChangeEvent(SPTESTDAILYATTENDANCERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SPTESTDAILYATTENDANCERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace NUBE.PAYROLL.PL.BizSoftDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MonthlySalaryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public MonthlySalaryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MonthlySalary";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("EmployeeId", "EmployeeId");
            tableMapping.ColumnMappings.Add("EmployeeNo", "EmployeeNo");
            tableMapping.ColumnMappings.Add("SalaryMonth", "SalaryMonth");
            tableMapping.ColumnMappings.Add("EmployeeName", "EmployeeName");
            tableMapping.ColumnMappings.Add("EPFNumber", "EPFNumber");
            tableMapping.ColumnMappings.Add("SOCSONumber", "SOCSONumber");
            tableMapping.ColumnMappings.Add("NRIC", "NRIC");
            tableMapping.ColumnMappings.Add("BankAccountNo", "BankAccountNo");
            tableMapping.ColumnMappings.Add("BasicSalary", "BasicSalary");
            tableMapping.ColumnMappings.Add("TotalWorkingDays", "TotalWorkingDays");
            tableMapping.ColumnMappings.Add("DaysAbsent", "DaysAbsent");
            tableMapping.ColumnMappings.Add("OTHours", "OTHours");
            tableMapping.ColumnMappings.Add("OT_Amount", "OT_Amount");
            tableMapping.ColumnMappings.Add("POB", "POB");
            tableMapping.ColumnMappings.Add("NEC", "NEC");
            tableMapping.ColumnMappings.Add("SECONDMENT", "SECONDMENT");
            tableMapping.ColumnMappings.Add("SPECIAL", "SPECIAL");
            tableMapping.ColumnMappings.Add("COLA", "COLA");
            tableMapping.ColumnMappings.Add("MOBILEALLOWANCE", "MOBILEALLOWANCE");
            tableMapping.ColumnMappings.Add("ALLOWANCE", "ALLOWANCE");
            tableMapping.ColumnMappings.Add("BONUS", "BONUS");
            tableMapping.ColumnMappings.Add("EXGRATIA", "EXGRATIA");
            tableMapping.ColumnMappings.Add("EPF", "EPF");
            tableMapping.ColumnMappings.Add("EPFUNION", "EPFUNION");
            tableMapping.ColumnMappings.Add("SOCSO", "SOCSO");
            tableMapping.ColumnMappings.Add("SOCSOUNION", "SOCSOUNION");
            tableMapping.ColumnMappings.Add("INCOMETAX", "INCOMETAX");
            tableMapping.ColumnMappings.Add("GMIS", "GMIS");
            tableMapping.ColumnMappings.Add("GELA", "GELA");
            tableMapping.ColumnMappings.Add("BIMBLOAN", "BIMBLOAN");
            tableMapping.ColumnMappings.Add("HOMECARLOANS", "HOMECARLOANS");
            tableMapping.ColumnMappings.Add("OTHERLOAN", "OTHERLOAN");
            tableMapping.ColumnMappings.Add("TOTALLOAN", "TOTALLOAN");
            tableMapping.ColumnMappings.Add("OTHERS", "OTHERS");
            tableMapping.ColumnMappings.Add("KOPERASI", "KOPERASI");
            tableMapping.ColumnMappings.Add("NUBESUBSCRIPTION", "NUBESUBSCRIPTION");
            tableMapping.ColumnMappings.Add("PCB", "PCB");
            tableMapping.ColumnMappings.Add("TOTALEARNING", "TOTALEARNING");
            tableMapping.ColumnMappings.Add("TOTALDEDUCTION", "TOTALDEDUCTION");
            tableMapping.ColumnMappings.Add("NETSALARY", "NETSALARY");
            tableMapping.ColumnMappings.Add("PositionName", "PositionName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [MonthlySalary] WHERE (([Id] = @Original_Id) AND ([EmployeeId] = @Ori" +
                "ginal_EmployeeId) AND ([EmployeeNo] = @Original_EmployeeNo) AND ((@IsNull_Salary" +
                "Month = 1 AND [SalaryMonth] IS NULL) OR ([SalaryMonth] = @Original_SalaryMonth))" +
                " AND ((@IsNull_EmployeeName = 1 AND [EmployeeName] IS NULL) OR ([EmployeeName] =" +
                " @Original_EmployeeName)) AND ((@IsNull_EPFNumber = 1 AND [EPFNumber] IS NULL) O" +
                "R ([EPFNumber] = @Original_EPFNumber)) AND ((@IsNull_SOCSONumber = 1 AND [SOCSON" +
                "umber] IS NULL) OR ([SOCSONumber] = @Original_SOCSONumber)) AND ((@IsNull_NRIC =" +
                " 1 AND [NRIC] IS NULL) OR ([NRIC] = @Original_NRIC)) AND ((@IsNull_BankAccountNo" +
                " = 1 AND [BankAccountNo] IS NULL) OR ([BankAccountNo] = @Original_BankAccountNo)" +
                ") AND ([BasicSalary] = @Original_BasicSalary) AND ([TotalWorkingDays] = @Origina" +
                "l_TotalWorkingDays) AND ([DaysAbsent] = @Original_DaysAbsent) AND ([OTHours] = @" +
                "Original_OTHours) AND ([OT_Amount] = @Original_OT_Amount) AND ([POB] = @Original" +
                "_POB) AND ([NEC] = @Original_NEC) AND ([SECONDMENT] = @Original_SECONDMENT) AND " +
                "([SPECIAL] = @Original_SPECIAL) AND ([COLA] = @Original_COLA) AND ([MOBILEALLOWA" +
                "NCE] = @Original_MOBILEALLOWANCE) AND ([ALLOWANCE] = @Original_ALLOWANCE) AND ([" +
                "BONUS] = @Original_BONUS) AND ([EXGRATIA] = @Original_EXGRATIA) AND ([EPF] = @Or" +
                "iginal_EPF) AND ([EPFUNION] = @Original_EPFUNION) AND ([SOCSO] = @Original_SOCSO" +
                ") AND ([SOCSOUNION] = @Original_SOCSOUNION) AND ([INCOMETAX] = @Original_INCOMET" +
                "AX) AND ([GMIS] = @Original_GMIS) AND ([GELA] = @Original_GELA) AND ([BIMBLOAN] " +
                "= @Original_BIMBLOAN) AND ([HOMECARLOANS] = @Original_HOMECARLOANS) AND ([OTHERL" +
                "OAN] = @Original_OTHERLOAN) AND ([TOTALLOAN] = @Original_TOTALLOAN) AND ([OTHERS" +
                "] = @Original_OTHERS) AND ([KOPERASI] = @Original_KOPERASI) AND ([NUBESUBSCRIPTI" +
                "ON] = @Original_NUBESUBSCRIPTION) AND ([PCB] = @Original_PCB) AND ([TOTALEARNING" +
                "] = @Original_TOTALEARNING) AND ([TOTALDEDUCTION] = @Original_TOTALDEDUCTION) AN" +
                "D ([NETSALARY] = @Original_NETSALARY) AND ((@IsNull_PositionName = 1 AND [Positi" +
                "onName] IS NULL) OR ([PositionName] = @Original_PositionName)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SalaryMonth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalaryMonth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalaryMonth", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalaryMonth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EmployeeName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPFNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPFNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPFNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPFNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SOCSONumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOCSONumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOCSONumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOCSONumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NRIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NRIC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BankAccountNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BankAccountNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BasicSalary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BasicSalary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalWorkingDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalWorkingDays", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DaysAbsent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DaysAbsent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTHours", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHours", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OT_Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OT_Amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "POB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NEC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NEC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SECONDMENT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SECONDMENT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SPECIAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SPECIAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COLA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "COLA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MOBILEALLOWANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "MOBILEALLOWANCE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ALLOWANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ALLOWANCE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BONUS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BONUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXGRATIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXGRATIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPF", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EPF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPFUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EPFUNION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOCSO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SOCSO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOCSOUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SOCSOUNION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INCOMETAX", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INCOMETAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GMIS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "GMIS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GELA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "GELA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BIMBLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BIMBLOAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOMECARLOANS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HOMECARLOANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTHERLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHERLOAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTALLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALLOAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTHERS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHERS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOPERASI", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOPERASI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NUBESUBSCRIPTION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NUBESUBSCRIPTION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PCB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PCB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTALEARNING", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALEARNING", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTALDEDUCTION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALDEDUCTION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NETSALARY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NETSALARY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PositionName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PositionName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PositionName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PositionName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [MonthlySalary] ([EmployeeId], [EmployeeNo], [SalaryMonth], [Employee" +
                "Name], [EPFNumber], [SOCSONumber], [NRIC], [BankAccountNo], [BasicSalary], [Tota" +
                "lWorkingDays], [DaysAbsent], [OTHours], [OT_Amount], [POB], [NEC], [SECONDMENT]," +
                " [SPECIAL], [COLA], [MOBILEALLOWANCE], [ALLOWANCE], [BONUS], [EXGRATIA], [EPF], " +
                "[EPFUNION], [SOCSO], [SOCSOUNION], [INCOMETAX], [GMIS], [GELA], [BIMBLOAN], [HOM" +
                "ECARLOANS], [OTHERLOAN], [TOTALLOAN], [OTHERS], [KOPERASI], [NUBESUBSCRIPTION], " +
                "[PCB], [TOTALEARNING], [TOTALDEDUCTION], [NETSALARY], [PositionName]) VALUES (@E" +
                "mployeeId, @EmployeeNo, @SalaryMonth, @EmployeeName, @EPFNumber, @SOCSONumber, @" +
                "NRIC, @BankAccountNo, @BasicSalary, @TotalWorkingDays, @DaysAbsent, @OTHours, @O" +
                "T_Amount, @POB, @NEC, @SECONDMENT, @SPECIAL, @COLA, @MOBILEALLOWANCE, @ALLOWANCE" +
                ", @BONUS, @EXGRATIA, @EPF, @EPFUNION, @SOCSO, @SOCSOUNION, @INCOMETAX, @GMIS, @G" +
                "ELA, @BIMBLOAN, @HOMECARLOANS, @OTHERLOAN, @TOTALLOAN, @OTHERS, @KOPERASI, @NUBE" +
                "SUBSCRIPTION, @PCB, @TOTALEARNING, @TOTALDEDUCTION, @NETSALARY, @PositionName);\r" +
                "\nSELECT Id, EmployeeId, EmployeeNo, SalaryMonth, EmployeeName, EPFNumber, SOCSON" +
                "umber, NRIC, BankAccountNo, BasicSalary, TotalWorkingDays, DaysAbsent, OTHours, " +
                "OT_Amount, POB, NEC, SECONDMENT, SPECIAL, COLA, MOBILEALLOWANCE, ALLOWANCE, BONU" +
                "S, EXGRATIA, EPF, EPFUNION, SOCSO, SOCSOUNION, INCOMETAX, GMIS, GELA, BIMBLOAN, " +
                "HOMECARLOANS, OTHERLOAN, TOTALLOAN, OTHERS, KOPERASI, NUBESUBSCRIPTION, PCB, TOT" +
                "ALEARNING, TOTALDEDUCTION, NETSALARY, PositionName FROM MonthlySalary WHERE (Id " +
                "= SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalaryMonth", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalaryMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPFNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPFNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOCSONumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOCSONumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NRIC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankAccountNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BasicSalary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BasicSalary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalWorkingDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalWorkingDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DaysAbsent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DaysAbsent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHours", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OT_Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "POB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NEC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NEC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SECONDMENT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SECONDMENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPECIAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SPECIAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COLA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "COLA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MOBILEALLOWANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "MOBILEALLOWANCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALLOWANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ALLOWANCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BONUS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BONUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXGRATIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXGRATIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPF", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EPF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPFUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EPFUNION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOCSO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SOCSO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOCSOUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SOCSOUNION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INCOMETAX", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INCOMETAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GMIS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "GMIS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GELA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "GELA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BIMBLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BIMBLOAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOMECARLOANS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HOMECARLOANS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHERLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHERLOAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTALLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALLOAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHERS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHERS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOPERASI", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOPERASI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NUBESUBSCRIPTION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NUBESUBSCRIPTION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PCB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTALEARNING", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALEARNING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTALDEDUCTION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALDEDUCTION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NETSALARY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NETSALARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PositionName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PositionName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [MonthlySalary] SET [EmployeeId] = @EmployeeId, [EmployeeNo] = @EmployeeNo" +
                ", [SalaryMonth] = @SalaryMonth, [EmployeeName] = @EmployeeName, [EPFNumber] = @E" +
                "PFNumber, [SOCSONumber] = @SOCSONumber, [NRIC] = @NRIC, [BankAccountNo] = @BankA" +
                "ccountNo, [BasicSalary] = @BasicSalary, [TotalWorkingDays] = @TotalWorkingDays, " +
                "[DaysAbsent] = @DaysAbsent, [OTHours] = @OTHours, [OT_Amount] = @OT_Amount, [POB" +
                "] = @POB, [NEC] = @NEC, [SECONDMENT] = @SECONDMENT, [SPECIAL] = @SPECIAL, [COLA]" +
                " = @COLA, [MOBILEALLOWANCE] = @MOBILEALLOWANCE, [ALLOWANCE] = @ALLOWANCE, [BONUS" +
                "] = @BONUS, [EXGRATIA] = @EXGRATIA, [EPF] = @EPF, [EPFUNION] = @EPFUNION, [SOCSO" +
                "] = @SOCSO, [SOCSOUNION] = @SOCSOUNION, [INCOMETAX] = @INCOMETAX, [GMIS] = @GMIS" +
                ", [GELA] = @GELA, [BIMBLOAN] = @BIMBLOAN, [HOMECARLOANS] = @HOMECARLOANS, [OTHER" +
                "LOAN] = @OTHERLOAN, [TOTALLOAN] = @TOTALLOAN, [OTHERS] = @OTHERS, [KOPERASI] = @" +
                "KOPERASI, [NUBESUBSCRIPTION] = @NUBESUBSCRIPTION, [PCB] = @PCB, [TOTALEARNING] =" +
                " @TOTALEARNING, [TOTALDEDUCTION] = @TOTALDEDUCTION, [NETSALARY] = @NETSALARY, [P" +
                "ositionName] = @PositionName WHERE (([Id] = @Original_Id) AND ([EmployeeId] = @O" +
                "riginal_EmployeeId) AND ([EmployeeNo] = @Original_EmployeeNo) AND ((@IsNull_Sala" +
                "ryMonth = 1 AND [SalaryMonth] IS NULL) OR ([SalaryMonth] = @Original_SalaryMonth" +
                ")) AND ((@IsNull_EmployeeName = 1 AND [EmployeeName] IS NULL) OR ([EmployeeName]" +
                " = @Original_EmployeeName)) AND ((@IsNull_EPFNumber = 1 AND [EPFNumber] IS NULL)" +
                " OR ([EPFNumber] = @Original_EPFNumber)) AND ((@IsNull_SOCSONumber = 1 AND [SOCS" +
                "ONumber] IS NULL) OR ([SOCSONumber] = @Original_SOCSONumber)) AND ((@IsNull_NRIC" +
                " = 1 AND [NRIC] IS NULL) OR ([NRIC] = @Original_NRIC)) AND ((@IsNull_BankAccount" +
                "No = 1 AND [BankAccountNo] IS NULL) OR ([BankAccountNo] = @Original_BankAccountN" +
                "o)) AND ([BasicSalary] = @Original_BasicSalary) AND ([TotalWorkingDays] = @Origi" +
                "nal_TotalWorkingDays) AND ([DaysAbsent] = @Original_DaysAbsent) AND ([OTHours] =" +
                " @Original_OTHours) AND ([OT_Amount] = @Original_OT_Amount) AND ([POB] = @Origin" +
                "al_POB) AND ([NEC] = @Original_NEC) AND ([SECONDMENT] = @Original_SECONDMENT) AN" +
                "D ([SPECIAL] = @Original_SPECIAL) AND ([COLA] = @Original_COLA) AND ([MOBILEALLO" +
                "WANCE] = @Original_MOBILEALLOWANCE) AND ([ALLOWANCE] = @Original_ALLOWANCE) AND " +
                "([BONUS] = @Original_BONUS) AND ([EXGRATIA] = @Original_EXGRATIA) AND ([EPF] = @" +
                "Original_EPF) AND ([EPFUNION] = @Original_EPFUNION) AND ([SOCSO] = @Original_SOC" +
                "SO) AND ([SOCSOUNION] = @Original_SOCSOUNION) AND ([INCOMETAX] = @Original_INCOM" +
                "ETAX) AND ([GMIS] = @Original_GMIS) AND ([GELA] = @Original_GELA) AND ([BIMBLOAN" +
                "] = @Original_BIMBLOAN) AND ([HOMECARLOANS] = @Original_HOMECARLOANS) AND ([OTHE" +
                "RLOAN] = @Original_OTHERLOAN) AND ([TOTALLOAN] = @Original_TOTALLOAN) AND ([OTHE" +
                "RS] = @Original_OTHERS) AND ([KOPERASI] = @Original_KOPERASI) AND ([NUBESUBSCRIP" +
                "TION] = @Original_NUBESUBSCRIPTION) AND ([PCB] = @Original_PCB) AND ([TOTALEARNI" +
                "NG] = @Original_TOTALEARNING) AND ([TOTALDEDUCTION] = @Original_TOTALDEDUCTION) " +
                "AND ([NETSALARY] = @Original_NETSALARY) AND ((@IsNull_PositionName = 1 AND [Posi" +
                "tionName] IS NULL) OR ([PositionName] = @Original_PositionName)));\r\nSELECT Id, E" +
                "mployeeId, EmployeeNo, SalaryMonth, EmployeeName, EPFNumber, SOCSONumber, NRIC, " +
                "BankAccountNo, BasicSalary, TotalWorkingDays, DaysAbsent, OTHours, OT_Amount, PO" +
                "B, NEC, SECONDMENT, SPECIAL, COLA, MOBILEALLOWANCE, ALLOWANCE, BONUS, EXGRATIA, " +
                "EPF, EPFUNION, SOCSO, SOCSOUNION, INCOMETAX, GMIS, GELA, BIMBLOAN, HOMECARLOANS," +
                " OTHERLOAN, TOTALLOAN, OTHERS, KOPERASI, NUBESUBSCRIPTION, PCB, TOTALEARNING, TO" +
                "TALDEDUCTION, NETSALARY, PositionName FROM MonthlySalary WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalaryMonth", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalaryMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmployeeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPFNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPFNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOCSONumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOCSONumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NRIC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankAccountNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BasicSalary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BasicSalary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalWorkingDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalWorkingDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DaysAbsent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DaysAbsent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHours", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OT_Amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "POB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NEC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NEC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SECONDMENT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SECONDMENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPECIAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SPECIAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COLA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "COLA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MOBILEALLOWANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "MOBILEALLOWANCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALLOWANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ALLOWANCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BONUS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BONUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXGRATIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXGRATIA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPF", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EPF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EPFUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EPFUNION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOCSO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SOCSO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOCSOUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SOCSOUNION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INCOMETAX", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INCOMETAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GMIS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "GMIS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GELA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "GELA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BIMBLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BIMBLOAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOMECARLOANS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HOMECARLOANS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHERLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHERLOAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTALLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALLOAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHERS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHERS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KOPERASI", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOPERASI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NUBESUBSCRIPTION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NUBESUBSCRIPTION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PCB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTALEARNING", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALEARNING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTALDEDUCTION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALDEDUCTION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NETSALARY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NETSALARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PositionName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PositionName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SalaryMonth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalaryMonth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalaryMonth", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SalaryMonth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EmployeeName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmployeeName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmployeeName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EPFNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPFNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPFNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EPFNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SOCSONumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOCSONumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOCSONumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOCSONumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NRIC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRIC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NRIC", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BankAccountNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BankAccountNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BankAccountNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BasicSalary", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BasicSalary", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalWorkingDays", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalWorkingDays", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DaysAbsent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DaysAbsent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTHours", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHours", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OT_Amount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OT_Amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "POB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NEC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NEC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SECONDMENT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SECONDMENT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SPECIAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SPECIAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COLA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "COLA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MOBILEALLOWANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "MOBILEALLOWANCE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ALLOWANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ALLOWANCE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BONUS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BONUS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXGRATIA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXGRATIA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPF", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EPF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EPFUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EPFUNION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOCSO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SOCSO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOCSOUNION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SOCSOUNION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INCOMETAX", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INCOMETAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GMIS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "GMIS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GELA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "GELA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BIMBLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BIMBLOAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOMECARLOANS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "HOMECARLOANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTHERLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHERLOAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTALLOAN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALLOAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTHERS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OTHERS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KOPERASI", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "KOPERASI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NUBESUBSCRIPTION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NUBESUBSCRIPTION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PCB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PCB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTALEARNING", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALEARNING", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTALDEDUCTION", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TOTALDEDUCTION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NETSALARY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NETSALARY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PositionName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PositionName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PositionName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PositionName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NUBE.PAYROLL.PL.Properties.Settings.Default.BizSoftConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id, EmployeeId, EmployeeNo, SalaryMonth, EmployeeName, EPFNumber, SOCSONumber, NRIC, BankAccountNo, BasicSalary, TotalWorkingDays, DaysAbsent, OTHours, OT_Amount, POB, NEC, SECONDMENT, SPECIAL, COLA, MOBILEALLOWANCE, ALLOWANCE, BONUS, EXGRATIA, EPF, EPFUNION, SOCSO, SOCSOUNION, INCOMETAX, GMIS, GELA, BIMBLOAN, HOMECARLOANS, OTHERLOAN, TOTALLOAN, OTHERS, KOPERASI, NUBESUBSCRIPTION, PCB, TOTALEARNING, TOTALDEDUCTION, NETSALARY, PositionName FROM MonthlySalary";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BizSoftDataSet.MonthlySalaryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BizSoftDataSet.MonthlySalaryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BizSoftDataSet.MonthlySalaryDataTable dataTable = new BizSoftDataSet.MonthlySalaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BizSoftDataSet.MonthlySalaryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BizSoftDataSet dataSet) {
            return this.Adapter.Update(dataSet, "MonthlySalary");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Id, 
                    int Original_EmployeeId, 
                    int Original_EmployeeNo, 
                    global::System.Nullable<global::System.DateTime> Original_SalaryMonth, 
                    string Original_EmployeeName, 
                    string Original_EPFNumber, 
                    string Original_SOCSONumber, 
                    string Original_NRIC, 
                    string Original_BankAccountNo, 
                    decimal Original_BasicSalary, 
                    decimal Original_TotalWorkingDays, 
                    decimal Original_DaysAbsent, 
                    decimal Original_OTHours, 
                    decimal Original_OT_Amount, 
                    decimal Original_POB, 
                    decimal Original_NEC, 
                    decimal Original_SECONDMENT, 
                    decimal Original_SPECIAL, 
                    decimal Original_COLA, 
                    decimal Original_MOBILEALLOWANCE, 
                    decimal Original_ALLOWANCE, 
                    decimal Original_BONUS, 
                    decimal Original_EXGRATIA, 
                    decimal Original_EPF, 
                    decimal Original_EPFUNION, 
                    decimal Original_SOCSO, 
                    decimal Original_SOCSOUNION, 
                    decimal Original_INCOMETAX, 
                    decimal Original_GMIS, 
                    decimal Original_GELA, 
                    decimal Original_BIMBLOAN, 
                    decimal Original_HOMECARLOANS, 
                    decimal Original_OTHERLOAN, 
                    decimal Original_TOTALLOAN, 
                    decimal Original_OTHERS, 
                    decimal Original_KOPERASI, 
                    decimal Original_NUBESUBSCRIPTION, 
                    decimal Original_PCB, 
                    decimal Original_TOTALEARNING, 
                    decimal Original_TOTALDEDUCTION, 
                    decimal Original_NETSALARY, 
                    string Original_PositionName) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_EmployeeId));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_EmployeeNo));
            if ((Original_SalaryMonth.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_SalaryMonth.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_EmployeeName == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_EmployeeName));
            }
            if ((Original_EPFNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_EPFNumber));
            }
            if ((Original_SOCSONumber == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_SOCSONumber));
            }
            if ((Original_NRIC == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_NRIC));
            }
            if ((Original_BankAccountNo == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_BankAccountNo));
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_BasicSalary));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_TotalWorkingDays));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((decimal)(Original_DaysAbsent));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_OTHours));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((decimal)(Original_OT_Amount));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((decimal)(Original_POB));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((decimal)(Original_NEC));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_SECONDMENT));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_SPECIAL));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_COLA));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((decimal)(Original_MOBILEALLOWANCE));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_ALLOWANCE));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((decimal)(Original_BONUS));
            this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_EXGRATIA));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((decimal)(Original_EPF));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((decimal)(Original_EPFUNION));
            this.Adapter.DeleteCommand.Parameters[31].Value = ((decimal)(Original_SOCSO));
            this.Adapter.DeleteCommand.Parameters[32].Value = ((decimal)(Original_SOCSOUNION));
            this.Adapter.DeleteCommand.Parameters[33].Value = ((decimal)(Original_INCOMETAX));
            this.Adapter.DeleteCommand.Parameters[34].Value = ((decimal)(Original_GMIS));
            this.Adapter.DeleteCommand.Parameters[35].Value = ((decimal)(Original_GELA));
            this.Adapter.DeleteCommand.Parameters[36].Value = ((decimal)(Original_BIMBLOAN));
            this.Adapter.DeleteCommand.Parameters[37].Value = ((decimal)(Original_HOMECARLOANS));
            this.Adapter.DeleteCommand.Parameters[38].Value = ((decimal)(Original_OTHERLOAN));
            this.Adapter.DeleteCommand.Parameters[39].Value = ((decimal)(Original_TOTALLOAN));
            this.Adapter.DeleteCommand.Parameters[40].Value = ((decimal)(Original_OTHERS));
            this.Adapter.DeleteCommand.Parameters[41].Value = ((decimal)(Original_KOPERASI));
            this.Adapter.DeleteCommand.Parameters[42].Value = ((decimal)(Original_NUBESUBSCRIPTION));
            this.Adapter.DeleteCommand.Parameters[43].Value = ((decimal)(Original_PCB));
            this.Adapter.DeleteCommand.Parameters[44].Value = ((decimal)(Original_TOTALEARNING));
            this.Adapter.DeleteCommand.Parameters[45].Value = ((decimal)(Original_TOTALDEDUCTION));
            this.Adapter.DeleteCommand.Parameters[46].Value = ((decimal)(Original_NETSALARY));
            if ((Original_PositionName == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_PositionName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int EmployeeId, 
                    int EmployeeNo, 
                    global::System.Nullable<global::System.DateTime> SalaryMonth, 
                    string EmployeeName, 
                    string EPFNumber, 
                    string SOCSONumber, 
                    string NRIC, 
                    string BankAccountNo, 
                    decimal BasicSalary, 
                    decimal TotalWorkingDays, 
                    decimal DaysAbsent, 
                    decimal OTHours, 
                    decimal OT_Amount, 
                    decimal POB, 
                    decimal NEC, 
                    decimal SECONDMENT, 
                    decimal SPECIAL, 
                    decimal COLA, 
                    decimal MOBILEALLOWANCE, 
                    decimal ALLOWANCE, 
                    decimal BONUS, 
                    decimal EXGRATIA, 
                    decimal EPF, 
                    decimal EPFUNION, 
                    decimal SOCSO, 
                    decimal SOCSOUNION, 
                    decimal INCOMETAX, 
                    decimal GMIS, 
                    decimal GELA, 
                    decimal BIMBLOAN, 
                    decimal HOMECARLOANS, 
                    decimal OTHERLOAN, 
                    decimal TOTALLOAN, 
                    decimal OTHERS, 
                    decimal KOPERASI, 
                    decimal NUBESUBSCRIPTION, 
                    decimal PCB, 
                    decimal TOTALEARNING, 
                    decimal TOTALDEDUCTION, 
                    decimal NETSALARY, 
                    string PositionName) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(EmployeeId));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(EmployeeNo));
            if ((SalaryMonth.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(SalaryMonth.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((EmployeeName == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(EmployeeName));
            }
            if ((EPFNumber == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(EPFNumber));
            }
            if ((SOCSONumber == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SOCSONumber));
            }
            if ((NRIC == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(NRIC));
            }
            if ((BankAccountNo == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(BankAccountNo));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(BasicSalary));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(TotalWorkingDays));
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(DaysAbsent));
            this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(OTHours));
            this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(OT_Amount));
            this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(POB));
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(NEC));
            this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(SECONDMENT));
            this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(SPECIAL));
            this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(COLA));
            this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(MOBILEALLOWANCE));
            this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(ALLOWANCE));
            this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(BONUS));
            this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(EXGRATIA));
            this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(EPF));
            this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(EPFUNION));
            this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(SOCSO));
            this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(SOCSOUNION));
            this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(INCOMETAX));
            this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(GMIS));
            this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(GELA));
            this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(BIMBLOAN));
            this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(HOMECARLOANS));
            this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(OTHERLOAN));
            this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(TOTALLOAN));
            this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(OTHERS));
            this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(KOPERASI));
            this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(NUBESUBSCRIPTION));
            this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(PCB));
            this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(TOTALEARNING));
            this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(TOTALDEDUCTION));
            this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(NETSALARY));
            if ((PositionName == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(PositionName));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int EmployeeId, 
                    int EmployeeNo, 
                    global::System.Nullable<global::System.DateTime> SalaryMonth, 
                    string EmployeeName, 
                    string EPFNumber, 
                    string SOCSONumber, 
                    string NRIC, 
                    string BankAccountNo, 
                    decimal BasicSalary, 
                    decimal TotalWorkingDays, 
                    decimal DaysAbsent, 
                    decimal OTHours, 
                    decimal OT_Amount, 
                    decimal POB, 
                    decimal NEC, 
                    decimal SECONDMENT, 
                    decimal SPECIAL, 
                    decimal COLA, 
                    decimal MOBILEALLOWANCE, 
                    decimal ALLOWANCE, 
                    decimal BONUS, 
                    decimal EXGRATIA, 
                    decimal EPF, 
                    decimal EPFUNION, 
                    decimal SOCSO, 
                    decimal SOCSOUNION, 
                    decimal INCOMETAX, 
                    decimal GMIS, 
                    decimal GELA, 
                    decimal BIMBLOAN, 
                    decimal HOMECARLOANS, 
                    decimal OTHERLOAN, 
                    decimal TOTALLOAN, 
                    decimal OTHERS, 
                    decimal KOPERASI, 
                    decimal NUBESUBSCRIPTION, 
                    decimal PCB, 
                    decimal TOTALEARNING, 
                    decimal TOTALDEDUCTION, 
                    decimal NETSALARY, 
                    string PositionName, 
                    int Original_Id, 
                    int Original_EmployeeId, 
                    int Original_EmployeeNo, 
                    global::System.Nullable<global::System.DateTime> Original_SalaryMonth, 
                    string Original_EmployeeName, 
                    string Original_EPFNumber, 
                    string Original_SOCSONumber, 
                    string Original_NRIC, 
                    string Original_BankAccountNo, 
                    decimal Original_BasicSalary, 
                    decimal Original_TotalWorkingDays, 
                    decimal Original_DaysAbsent, 
                    decimal Original_OTHours, 
                    decimal Original_OT_Amount, 
                    decimal Original_POB, 
                    decimal Original_NEC, 
                    decimal Original_SECONDMENT, 
                    decimal Original_SPECIAL, 
                    decimal Original_COLA, 
                    decimal Original_MOBILEALLOWANCE, 
                    decimal Original_ALLOWANCE, 
                    decimal Original_BONUS, 
                    decimal Original_EXGRATIA, 
                    decimal Original_EPF, 
                    decimal Original_EPFUNION, 
                    decimal Original_SOCSO, 
                    decimal Original_SOCSOUNION, 
                    decimal Original_INCOMETAX, 
                    decimal Original_GMIS, 
                    decimal Original_GELA, 
                    decimal Original_BIMBLOAN, 
                    decimal Original_HOMECARLOANS, 
                    decimal Original_OTHERLOAN, 
                    decimal Original_TOTALLOAN, 
                    decimal Original_OTHERS, 
                    decimal Original_KOPERASI, 
                    decimal Original_NUBESUBSCRIPTION, 
                    decimal Original_PCB, 
                    decimal Original_TOTALEARNING, 
                    decimal Original_TOTALDEDUCTION, 
                    decimal Original_NETSALARY, 
                    string Original_PositionName, 
                    int Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(EmployeeId));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(EmployeeNo));
            if ((SalaryMonth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(SalaryMonth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((EmployeeName == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(EmployeeName));
            }
            if ((EPFNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(EPFNumber));
            }
            if ((SOCSONumber == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SOCSONumber));
            }
            if ((NRIC == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(NRIC));
            }
            if ((BankAccountNo == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(BankAccountNo));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(BasicSalary));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(TotalWorkingDays));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(DaysAbsent));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(OTHours));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(OT_Amount));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(POB));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(NEC));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(SECONDMENT));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(SPECIAL));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(COLA));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(MOBILEALLOWANCE));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(ALLOWANCE));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(BONUS));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(EXGRATIA));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(EPF));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(EPFUNION));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(SOCSO));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(SOCSOUNION));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(INCOMETAX));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(GMIS));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(GELA));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(BIMBLOAN));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(HOMECARLOANS));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(OTHERLOAN));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(TOTALLOAN));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(OTHERS));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(KOPERASI));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(NUBESUBSCRIPTION));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(PCB));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(TOTALEARNING));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(TOTALDEDUCTION));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(NETSALARY));
            if ((PositionName == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(PositionName));
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_Id));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_EmployeeId));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Original_EmployeeNo));
            if ((Original_SalaryMonth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((System.DateTime)(Original_SalaryMonth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_EmployeeName == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_EmployeeName));
            }
            if ((Original_EPFNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_EPFNumber));
            }
            if ((Original_SOCSONumber == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_SOCSONumber));
            }
            if ((Original_NRIC == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_NRIC));
            }
            if ((Original_BankAccountNo == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_BankAccountNo));
            }
            this.Adapter.UpdateCommand.Parameters[56].Value = ((decimal)(Original_BasicSalary));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((decimal)(Original_TotalWorkingDays));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((decimal)(Original_DaysAbsent));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((decimal)(Original_OTHours));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((decimal)(Original_OT_Amount));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((decimal)(Original_POB));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((decimal)(Original_NEC));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((decimal)(Original_SECONDMENT));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((decimal)(Original_SPECIAL));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((decimal)(Original_COLA));
            this.Adapter.UpdateCommand.Parameters[66].Value = ((decimal)(Original_MOBILEALLOWANCE));
            this.Adapter.UpdateCommand.Parameters[67].Value = ((decimal)(Original_ALLOWANCE));
            this.Adapter.UpdateCommand.Parameters[68].Value = ((decimal)(Original_BONUS));
            this.Adapter.UpdateCommand.Parameters[69].Value = ((decimal)(Original_EXGRATIA));
            this.Adapter.UpdateCommand.Parameters[70].Value = ((decimal)(Original_EPF));
            this.Adapter.UpdateCommand.Parameters[71].Value = ((decimal)(Original_EPFUNION));
            this.Adapter.UpdateCommand.Parameters[72].Value = ((decimal)(Original_SOCSO));
            this.Adapter.UpdateCommand.Parameters[73].Value = ((decimal)(Original_SOCSOUNION));
            this.Adapter.UpdateCommand.Parameters[74].Value = ((decimal)(Original_INCOMETAX));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((decimal)(Original_GMIS));
            this.Adapter.UpdateCommand.Parameters[76].Value = ((decimal)(Original_GELA));
            this.Adapter.UpdateCommand.Parameters[77].Value = ((decimal)(Original_BIMBLOAN));
            this.Adapter.UpdateCommand.Parameters[78].Value = ((decimal)(Original_HOMECARLOANS));
            this.Adapter.UpdateCommand.Parameters[79].Value = ((decimal)(Original_OTHERLOAN));
            this.Adapter.UpdateCommand.Parameters[80].Value = ((decimal)(Original_TOTALLOAN));
            this.Adapter.UpdateCommand.Parameters[81].Value = ((decimal)(Original_OTHERS));
            this.Adapter.UpdateCommand.Parameters[82].Value = ((decimal)(Original_KOPERASI));
            this.Adapter.UpdateCommand.Parameters[83].Value = ((decimal)(Original_NUBESUBSCRIPTION));
            this.Adapter.UpdateCommand.Parameters[84].Value = ((decimal)(Original_PCB));
            this.Adapter.UpdateCommand.Parameters[85].Value = ((decimal)(Original_TOTALEARNING));
            this.Adapter.UpdateCommand.Parameters[86].Value = ((decimal)(Original_TOTALDEDUCTION));
            this.Adapter.UpdateCommand.Parameters[87].Value = ((decimal)(Original_NETSALARY));
            if ((Original_PositionName == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(Original_PositionName));
            }
            this.Adapter.UpdateCommand.Parameters[90].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int EmployeeId, 
                    int EmployeeNo, 
                    global::System.Nullable<global::System.DateTime> SalaryMonth, 
                    string EmployeeName, 
                    string EPFNumber, 
                    string SOCSONumber, 
                    string NRIC, 
                    string BankAccountNo, 
                    decimal BasicSalary, 
                    decimal TotalWorkingDays, 
                    decimal DaysAbsent, 
                    decimal OTHours, 
                    decimal OT_Amount, 
                    decimal POB, 
                    decimal NEC, 
                    decimal SECONDMENT, 
                    decimal SPECIAL, 
                    decimal COLA, 
                    decimal MOBILEALLOWANCE, 
                    decimal ALLOWANCE, 
                    decimal BONUS, 
                    decimal EXGRATIA, 
                    decimal EPF, 
                    decimal EPFUNION, 
                    decimal SOCSO, 
                    decimal SOCSOUNION, 
                    decimal INCOMETAX, 
                    decimal GMIS, 
                    decimal GELA, 
                    decimal BIMBLOAN, 
                    decimal HOMECARLOANS, 
                    decimal OTHERLOAN, 
                    decimal TOTALLOAN, 
                    decimal OTHERS, 
                    decimal KOPERASI, 
                    decimal NUBESUBSCRIPTION, 
                    decimal PCB, 
                    decimal TOTALEARNING, 
                    decimal TOTALDEDUCTION, 
                    decimal NETSALARY, 
                    string PositionName, 
                    int Original_Id, 
                    int Original_EmployeeId, 
                    int Original_EmployeeNo, 
                    global::System.Nullable<global::System.DateTime> Original_SalaryMonth, 
                    string Original_EmployeeName, 
                    string Original_EPFNumber, 
                    string Original_SOCSONumber, 
                    string Original_NRIC, 
                    string Original_BankAccountNo, 
                    decimal Original_BasicSalary, 
                    decimal Original_TotalWorkingDays, 
                    decimal Original_DaysAbsent, 
                    decimal Original_OTHours, 
                    decimal Original_OT_Amount, 
                    decimal Original_POB, 
                    decimal Original_NEC, 
                    decimal Original_SECONDMENT, 
                    decimal Original_SPECIAL, 
                    decimal Original_COLA, 
                    decimal Original_MOBILEALLOWANCE, 
                    decimal Original_ALLOWANCE, 
                    decimal Original_BONUS, 
                    decimal Original_EXGRATIA, 
                    decimal Original_EPF, 
                    decimal Original_EPFUNION, 
                    decimal Original_SOCSO, 
                    decimal Original_SOCSOUNION, 
                    decimal Original_INCOMETAX, 
                    decimal Original_GMIS, 
                    decimal Original_GELA, 
                    decimal Original_BIMBLOAN, 
                    decimal Original_HOMECARLOANS, 
                    decimal Original_OTHERLOAN, 
                    decimal Original_TOTALLOAN, 
                    decimal Original_OTHERS, 
                    decimal Original_KOPERASI, 
                    decimal Original_NUBESUBSCRIPTION, 
                    decimal Original_PCB, 
                    decimal Original_TOTALEARNING, 
                    decimal Original_TOTALDEDUCTION, 
                    decimal Original_NETSALARY, 
                    string Original_PositionName) {
            return this.Update(EmployeeId, EmployeeNo, SalaryMonth, EmployeeName, EPFNumber, SOCSONumber, NRIC, BankAccountNo, BasicSalary, TotalWorkingDays, DaysAbsent, OTHours, OT_Amount, POB, NEC, SECONDMENT, SPECIAL, COLA, MOBILEALLOWANCE, ALLOWANCE, BONUS, EXGRATIA, EPF, EPFUNION, SOCSO, SOCSOUNION, INCOMETAX, GMIS, GELA, BIMBLOAN, HOMECARLOANS, OTHERLOAN, TOTALLOAN, OTHERS, KOPERASI, NUBESUBSCRIPTION, PCB, TOTALEARNING, TOTALDEDUCTION, NETSALARY, PositionName, Original_Id, Original_EmployeeId, Original_EmployeeNo, Original_SalaryMonth, Original_EmployeeName, Original_EPFNumber, Original_SOCSONumber, Original_NRIC, Original_BankAccountNo, Original_BasicSalary, Original_TotalWorkingDays, Original_DaysAbsent, Original_OTHours, Original_OT_Amount, Original_POB, Original_NEC, Original_SECONDMENT, Original_SPECIAL, Original_COLA, Original_MOBILEALLOWANCE, Original_ALLOWANCE, Original_BONUS, Original_EXGRATIA, Original_EPF, Original_EPFUNION, Original_SOCSO, Original_SOCSOUNION, Original_INCOMETAX, Original_GMIS, Original_GELA, Original_BIMBLOAN, Original_HOMECARLOANS, Original_OTHERLOAN, Original_TOTALLOAN, Original_OTHERS, Original_KOPERASI, Original_NUBESUBSCRIPTION, Original_PCB, Original_TOTALEARNING, Original_TOTALDEDUCTION, Original_NETSALARY, Original_PositionName, Original_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SPTESTDAILYATTENDANCETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public SPTESTDAILYATTENDANCETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SPTESTDAILYATTENDANCE";
            tableMapping.ColumnMappings.Add("RNO", "RNO");
            tableMapping.ColumnMappings.Add("EMPLOYEEID", "EMPLOYEEID");
            tableMapping.ColumnMappings.Add("MEMBERSHIPNO", "MEMBERSHIPNO");
            tableMapping.ColumnMappings.Add("EMPLOYEENAME", "EMPLOYEENAME");
            tableMapping.ColumnMappings.Add("POSITIONNAME", "POSITIONNAME");
            tableMapping.ColumnMappings.Add("ATTDATE", "ATTDATE");
            tableMapping.ColumnMappings.Add("INTIME", "INTIME");
            tableMapping.ColumnMappings.Add("OUTTIME", "OUTTIME");
            tableMapping.ColumnMappings.Add("WORKING_HOURS", "WORKING_HOURS");
            tableMapping.ColumnMappings.Add("WORKING_MINUTES", "WORKING_MINUTES");
            tableMapping.ColumnMappings.Add("WITHPERMISSION", "WITHPERMISSION");
            tableMapping.ColumnMappings.Add("OT_HOURS", "OT_HOURS");
            tableMapping.ColumnMappings.Add("OT_MINUTES", "OT_MINUTES");
            tableMapping.ColumnMappings.Add("REMARKS", "REMARKS");
            tableMapping.ColumnMappings.Add("ISFULLDAYLEAVE", "ISFULLDAYLEAVE");
            tableMapping.ColumnMappings.Add("ISHALFDAYLEAVE", "ISHALFDAYLEAVE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::NUBE.PAYROLL.PL.Properties.Settings.Default.BizSoftConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SPTESTDAILYATTENDANCE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BizSoftDataSet.SPTESTDAILYATTENDANCEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BizSoftDataSet.SPTESTDAILYATTENDANCEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BizSoftDataSet.SPTESTDAILYATTENDANCEDataTable dataTable = new BizSoftDataSet.SPTESTDAILYATTENDANCEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private MonthlySalaryTableAdapter _monthlySalaryTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MonthlySalaryTableAdapter MonthlySalaryTableAdapter {
            get {
                return this._monthlySalaryTableAdapter;
            }
            set {
                this._monthlySalaryTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._monthlySalaryTableAdapter != null) 
                            && (this._monthlySalaryTableAdapter.Connection != null))) {
                    return this._monthlySalaryTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._monthlySalaryTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(BizSoftDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._monthlySalaryTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MonthlySalary.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._monthlySalaryTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(BizSoftDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._monthlySalaryTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MonthlySalary.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._monthlySalaryTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(BizSoftDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._monthlySalaryTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MonthlySalary.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._monthlySalaryTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(BizSoftDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._monthlySalaryTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._monthlySalaryTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._monthlySalaryTableAdapter != null)) {
                    revertConnections.Add(this._monthlySalaryTableAdapter, this._monthlySalaryTableAdapter.Connection);
                    this._monthlySalaryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._monthlySalaryTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._monthlySalaryTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._monthlySalaryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._monthlySalaryTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._monthlySalaryTableAdapter != null)) {
                    this._monthlySalaryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._monthlySalaryTableAdapter]));
                    this._monthlySalaryTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591